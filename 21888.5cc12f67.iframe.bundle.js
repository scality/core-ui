"use strict";(self.webpackChunk_scality_core_ui=self.webpackChunk_scality_core_ui||[]).push([[21888],{"./node_modules/downshift/dist/downshift.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Bp:()=>useCombobox,WM:()=>useSelect});var prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),react=__webpack_require__("./node_modules/react/index.js");__webpack_require__("./node_modules/react-is/index.js");function t(t){return"object"==typeof t&&null!=t&&1===t.nodeType}function e(t,e){return(!e||"hidden"!==t)&&"visible"!==t&&"clip"!==t}function n(t,n){if(t.clientHeight<t.scrollHeight||t.clientWidth<t.scrollWidth){var r=getComputedStyle(t,null);return e(r.overflowY,n)||e(r.overflowX,n)||function(t){var e=function(t){if(!t.ownerDocument||!t.ownerDocument.defaultView)return null;try{return t.ownerDocument.defaultView.frameElement}catch(t){return null}}(t);return!!e&&(e.clientHeight<t.scrollHeight||e.clientWidth<t.scrollWidth)}(t)}return!1}function r(t,e,n,r,i,o,l,d){return o<t&&l>e||o>t&&l<e?0:o<=t&&d<=n||l>=e&&d>=n?o-t-r:l>e&&d<n||o<t&&d>n?l-e+i:0}var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");let idCounter=0;function noop(){}function scrollIntoView(node,menuNode){if(!node)return;const actions=function index_module(e,i){var o=window,l=i.scrollMode,d=i.block,u=i.inline,h=i.boundary,a=i.skipOverflowHiddenElements,c="function"==typeof h?h:function(t){return t!==h};if(!t(e))throw new TypeError("Invalid target");for(var f=document.scrollingElement||document.documentElement,s=[],p=e;t(p)&&c(p);){if((p=p.parentElement)===f){s.push(p);break}null!=p&&p===document.body&&n(p)&&!n(document.documentElement)||null!=p&&n(p,a)&&s.push(p)}for(var m=o.visualViewport?o.visualViewport.width:innerWidth,g=o.visualViewport?o.visualViewport.height:innerHeight,w=window.scrollX||pageXOffset,v=window.scrollY||pageYOffset,W=e.getBoundingClientRect(),b=W.height,H=W.width,y=W.top,E=W.right,M=W.bottom,V=W.left,x="start"===d||"nearest"===d?y:"end"===d?M:y+b/2,I="center"===u?V+H/2:"end"===u?E:V,C=[],T=0;T<s.length;T++){var k=s[T],B=k.getBoundingClientRect(),D=B.height,O=B.width,R=B.top,X=B.right,Y=B.bottom,L=B.left;if("if-needed"===l&&y>=0&&V>=0&&M<=g&&E<=m&&y>=R&&M<=Y&&V>=L&&E<=X)return C;var S=getComputedStyle(k),j=parseInt(S.borderLeftWidth,10),q=parseInt(S.borderTopWidth,10),z=parseInt(S.borderRightWidth,10),A=parseInt(S.borderBottomWidth,10),F=0,G=0,J="offsetWidth"in k?k.offsetWidth-k.clientWidth-j-z:0,K="offsetHeight"in k?k.offsetHeight-k.clientHeight-q-A:0;if(f===k)F="start"===d?x:"end"===d?x-g:"nearest"===d?r(v,v+g,g,q,A,v+x,v+x+b,b):x-g/2,G="start"===u?I:"center"===u?I-m/2:"end"===u?I-m:r(w,w+m,m,j,z,w+I,w+I+H,H),F=Math.max(0,F+v),G=Math.max(0,G+w);else{F="start"===d?x-R-q:"end"===d?x-Y+A+K:"nearest"===d?r(R,Y,D,q,A+K,x,x+b,b):x-(R+D/2)+K/2,G="start"===u?I-L-j:"center"===u?I-(L+O/2)+J/2:"end"===u?I-X+z+J:r(L,X,O,j,z+J,I,I+H,H);var N=k.scrollLeft,P=k.scrollTop;x+=P-(F=Math.max(0,Math.min(P+F,k.scrollHeight-D+K))),I+=N-(G=Math.max(0,Math.min(N+G,k.scrollWidth-O+J)))}C.push({el:k,top:F,left:G})}return C}(node,{boundary:menuNode,block:"nearest",scrollMode:"if-needed"});actions.forEach((_ref=>{let{el,top,left}=_ref;el.scrollTop=top,el.scrollLeft=left}))}function isOrContainsNode(parent,child,environment){return parent===child||child instanceof environment.Node&&parent.contains&&parent.contains(child)}function debounce(fn,time){let timeoutId;function cancel(){timeoutId&&clearTimeout(timeoutId)}function wrapper(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];cancel(),timeoutId=setTimeout((()=>{timeoutId=null,fn(...args)}),time)}return wrapper.cancel=cancel,wrapper}function callAllEventHandlers(){for(var _len2=arguments.length,fns=new Array(_len2),_key2=0;_key2<_len2;_key2++)fns[_key2]=arguments[_key2];return function(event){for(var _len3=arguments.length,args=new Array(_len3>1?_len3-1:0),_key3=1;_key3<_len3;_key3++)args[_key3-1]=arguments[_key3];return fns.some((fn=>(fn&&fn(event,...args),event.preventDownshiftDefault||event.hasOwnProperty("nativeEvent")&&event.nativeEvent.preventDownshiftDefault)))}}function handleRefs(){for(var _len4=arguments.length,refs=new Array(_len4),_key4=0;_key4<_len4;_key4++)refs[_key4]=arguments[_key4];return node=>{refs.forEach((ref=>{"function"==typeof ref?ref(node):ref&&(ref.current=node)}))}}function generateId(){return String(idCounter++)}function getA11yStatusMessage$1(_ref2){let{isOpen,resultCount,previousResultCount}=_ref2;return isOpen?resultCount?resultCount!==previousResultCount?`${resultCount} result${1===resultCount?" is":"s are"} available, use up and down arrow keys to navigate. Press Enter key to select.`:"":"No results are available.":""}function getState(state,props){return Object.keys(state).reduce(((prevState,key)=>(prevState[key]=isControlledProp(props,key)?props[key]:state[key],prevState)),{})}function isControlledProp(props,key){return void 0!==props[key]}function normalizeArrowKey(event){const{key,keyCode}=event;return keyCode>=37&&keyCode<=40&&0!==key.indexOf("Arrow")?`Arrow${key}`:key}function getNextWrappingIndex(moveAmount,baseIndex,itemCount,getItemNodeFromIndex,circular){if(void 0===circular&&(circular=!0),0===itemCount)return-1;const itemsLastIndex=itemCount-1;("number"!=typeof baseIndex||baseIndex<0||baseIndex>=itemCount)&&(baseIndex=moveAmount>0?-1:itemsLastIndex+1);let newIndex=baseIndex+moveAmount;newIndex<0?newIndex=circular?itemsLastIndex:0:newIndex>itemsLastIndex&&(newIndex=circular?0:itemsLastIndex);const nonDisabledNewIndex=getNextNonDisabledIndex(moveAmount,newIndex,itemCount,getItemNodeFromIndex,circular);return-1===nonDisabledNewIndex?baseIndex>=itemCount?-1:baseIndex:nonDisabledNewIndex}function getNextNonDisabledIndex(moveAmount,baseIndex,itemCount,getItemNodeFromIndex,circular){const currentElementNode=getItemNodeFromIndex(baseIndex);if(!currentElementNode||!currentElementNode.hasAttribute("disabled"))return baseIndex;if(moveAmount>0){for(let index=baseIndex+1;index<itemCount;index++)if(!getItemNodeFromIndex(index).hasAttribute("disabled"))return index}else for(let index=baseIndex-1;index>=0;index--)if(!getItemNodeFromIndex(index).hasAttribute("disabled"))return index;return circular?moveAmount>0?getNextNonDisabledIndex(1,0,itemCount,getItemNodeFromIndex,!1):getNextNonDisabledIndex(-1,itemCount-1,itemCount,getItemNodeFromIndex,!1):-1}function targetWithinDownshift(target,downshiftElements,environment,checkActiveElement){return void 0===checkActiveElement&&(checkActiveElement=!0),downshiftElements.some((contextNode=>contextNode&&(isOrContainsNode(contextNode,target,environment)||checkActiveElement&&isOrContainsNode(contextNode,environment.document.activeElement,environment))))}const cleanupStatus=debounce((documentProp=>{getStatusDiv(documentProp).textContent=""}),500);function setStatus(status,documentProp){const div=getStatusDiv(documentProp);status&&(div.textContent=status,cleanupStatus(documentProp))}function getStatusDiv(documentProp){void 0===documentProp&&(documentProp=document);let statusDiv=documentProp.getElementById("a11y-status-message");return statusDiv||(statusDiv=documentProp.createElement("div"),statusDiv.setAttribute("id","a11y-status-message"),statusDiv.setAttribute("role","status"),statusDiv.setAttribute("aria-live","polite"),statusDiv.setAttribute("aria-relevant","additions text"),Object.assign(statusDiv.style,{border:"0",clip:"rect(0 0 0 0)",height:"1px",margin:"-1px",overflow:"hidden",padding:"0",position:"absolute",width:"1px"}),documentProp.body.appendChild(statusDiv),statusDiv)}const dropdownDefaultStateValues={highlightedIndex:-1,isOpen:!1,selectedItem:null,inputValue:""};function callOnChangeProps(action,state,newState){const{props,type}=action,changes={};Object.keys(state).forEach((key=>{!function invokeOnChangeHandler(key,action,state,newState){const{props,type}=action,handler=`on${capitalizeString(key)}Change`;props[handler]&&void 0!==newState[key]&&newState[key]!==state[key]&&props[handler]({type,...newState})}(key,action,state,newState),newState[key]!==state[key]&&(changes[key]=newState[key])})),props.onStateChange&&Object.keys(changes).length&&props.onStateChange({type,...changes})}const updateA11yStatus=debounce(((getA11yMessage,document)=>{setStatus(getA11yMessage(),document)}),200),useIsomorphicLayoutEffect="undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?react.useLayoutEffect:react.useEffect;function useElementIds(_ref){let{id=`downshift-${generateId()}`,labelId,menuId,getItemId,toggleButtonId,inputId}=_ref;return(0,react.useRef)({labelId:labelId||`${id}-label`,menuId:menuId||`${id}-menu`,getItemId:getItemId||(index=>`${id}-item-${index}`),toggleButtonId:toggleButtonId||`${id}-toggle-button`,inputId:inputId||`${id}-input`}).current}function getItemIndex(index,item,items){return void 0!==index?index:0===items.length?-1:items.indexOf(item)}function capitalizeString(string){return`${string.slice(0,1).toUpperCase()}${string.slice(1)}`}function useLatestRef(val){const ref=(0,react.useRef)(val);return ref.current=val,ref}function useEnhancedReducer(reducer,initialState,props){const prevStateRef=(0,react.useRef)(),actionRef=(0,react.useRef)(),enhancedReducer=(0,react.useCallback)(((state,action)=>{actionRef.current=action,state=getState(state,action.props);const changes=reducer(state,action);return action.props.stateReducer(state,{...action,changes})}),[reducer]),[state,dispatch]=(0,react.useReducer)(enhancedReducer,initialState),propsRef=useLatestRef(props),dispatchWithProps=(0,react.useCallback)((action=>dispatch({props:propsRef.current,...action})),[propsRef]),action=actionRef.current;return(0,react.useEffect)((()=>{action&&prevStateRef.current&&prevStateRef.current!==state&&callOnChangeProps(action,getState(prevStateRef.current,action.props),state),prevStateRef.current=state}),[state,props,action]),[state,dispatchWithProps]}function useControlledReducer$1(reducer,initialState,props){const[state,dispatch]=useEnhancedReducer(reducer,initialState,props);return[getState(state,props),dispatch]}const defaultProps$3={itemToString:function itemToString(item){return item?String(item):""},stateReducer:function stateReducer(s,a){return a.changes},getA11ySelectionMessage:function getA11ySelectionMessage(selectionParameters){const{selectedItem,itemToString:itemToStringLocal}=selectionParameters;return selectedItem?`${itemToStringLocal(selectedItem)} has been selected.`:""},scrollIntoView,environment:"undefined"==typeof window?{}:window};function getDefaultValue$1(props,propKey,defaultStateValues){void 0===defaultStateValues&&(defaultStateValues=dropdownDefaultStateValues);const defaultValue=props[`default${capitalizeString(propKey)}`];return void 0!==defaultValue?defaultValue:defaultStateValues[propKey]}function getInitialValue$1(props,propKey,defaultStateValues){void 0===defaultStateValues&&(defaultStateValues=dropdownDefaultStateValues);const value=props[propKey];if(void 0!==value)return value;const initialValue=props[`initial${capitalizeString(propKey)}`];return void 0!==initialValue?initialValue:getDefaultValue$1(props,propKey,defaultStateValues)}function getInitialState$2(props){const selectedItem=getInitialValue$1(props,"selectedItem"),isOpen=getInitialValue$1(props,"isOpen"),highlightedIndex=getInitialValue$1(props,"highlightedIndex"),inputValue=getInitialValue$1(props,"inputValue");return{highlightedIndex:highlightedIndex<0&&selectedItem&&isOpen?props.items.indexOf(selectedItem):highlightedIndex,isOpen,selectedItem,inputValue}}function getHighlightedIndexOnOpen(props,state,offset){const{items,initialHighlightedIndex,defaultHighlightedIndex}=props,{selectedItem,highlightedIndex}=state;return 0===items.length?-1:void 0!==initialHighlightedIndex&&highlightedIndex===initialHighlightedIndex?initialHighlightedIndex:void 0!==defaultHighlightedIndex?defaultHighlightedIndex:selectedItem?items.indexOf(selectedItem):0===offset?-1:offset<0?items.length-1:0}function useMouseAndTouchTracker(isOpen,downshiftElementRefs,environment,handleBlur){const mouseAndTouchTrackersRef=(0,react.useRef)({isMouseDown:!1,isTouchMove:!1});return(0,react.useEffect)((()=>{const onMouseDown=()=>{mouseAndTouchTrackersRef.current.isMouseDown=!0},onMouseUp=event=>{mouseAndTouchTrackersRef.current.isMouseDown=!1,isOpen&&!targetWithinDownshift(event.target,downshiftElementRefs.map((ref=>ref.current)),environment)&&handleBlur()},onTouchStart=()=>{mouseAndTouchTrackersRef.current.isTouchMove=!1},onTouchMove=()=>{mouseAndTouchTrackersRef.current.isTouchMove=!0},onTouchEnd=event=>{!isOpen||mouseAndTouchTrackersRef.current.isTouchMove||targetWithinDownshift(event.target,downshiftElementRefs.map((ref=>ref.current)),environment,!1)||handleBlur()};return environment.addEventListener("mousedown",onMouseDown),environment.addEventListener("mouseup",onMouseUp),environment.addEventListener("touchstart",onTouchStart),environment.addEventListener("touchmove",onTouchMove),environment.addEventListener("touchend",onTouchEnd),function cleanup(){environment.removeEventListener("mousedown",onMouseDown),environment.removeEventListener("mouseup",onMouseUp),environment.removeEventListener("touchstart",onTouchStart),environment.removeEventListener("touchmove",onTouchMove),environment.removeEventListener("touchend",onTouchEnd)}}),[isOpen,environment]),mouseAndTouchTrackersRef}let useGetterPropsCalledChecker=()=>noop;function useA11yMessageSetter(getA11yMessage,dependencyArray,_ref2){let{isInitialMount,highlightedIndex,items,environment,...rest}=_ref2;(0,react.useEffect)((()=>{isInitialMount||updateA11yStatus((()=>getA11yMessage({highlightedIndex,highlightedItem:items[highlightedIndex],resultCount:items.length,...rest})),environment.document)}),dependencyArray)}function useScrollIntoView(_ref3){let{highlightedIndex,isOpen,itemRefs,getItemNodeFromIndex,menuElement,scrollIntoView:scrollIntoViewProp}=_ref3;const shouldScrollRef=(0,react.useRef)(!0);return useIsomorphicLayoutEffect((()=>{highlightedIndex<0||!isOpen||!Object.keys(itemRefs.current).length||(!1===shouldScrollRef.current?shouldScrollRef.current=!0:scrollIntoViewProp(getItemNodeFromIndex(highlightedIndex),menuElement))}),[highlightedIndex]),shouldScrollRef}let useControlPropsValidator=noop;function downshiftCommonReducer(state,action,stateChangeTypes){const{type,props}=action;let changes;switch(type){case stateChangeTypes.ItemMouseMove:changes={highlightedIndex:action.disabled?-1:action.index};break;case stateChangeTypes.MenuMouseLeave:changes={highlightedIndex:-1};break;case stateChangeTypes.ToggleButtonClick:case stateChangeTypes.FunctionToggleMenu:changes={isOpen:!state.isOpen,highlightedIndex:state.isOpen?-1:getHighlightedIndexOnOpen(props,state,0)};break;case stateChangeTypes.FunctionOpenMenu:changes={isOpen:!0,highlightedIndex:getHighlightedIndexOnOpen(props,state,0)};break;case stateChangeTypes.FunctionCloseMenu:changes={isOpen:!1};break;case stateChangeTypes.FunctionSetHighlightedIndex:changes={highlightedIndex:action.highlightedIndex};break;case stateChangeTypes.FunctionSetInputValue:changes={inputValue:action.inputValue};break;case stateChangeTypes.FunctionReset:changes={highlightedIndex:getDefaultValue$1(props,"highlightedIndex"),isOpen:getDefaultValue$1(props,"isOpen"),selectedItem:getDefaultValue$1(props,"selectedItem"),inputValue:getDefaultValue$1(props,"inputValue")};break;default:throw new Error("Reducer called without proper action type.")}return{...state,...changes}}prop_types_default().array.isRequired,prop_types_default().func,prop_types_default().func,prop_types_default().func,prop_types_default().number,prop_types_default().number,prop_types_default().number,prop_types_default().bool,prop_types_default().bool,prop_types_default().bool,prop_types_default().any,prop_types_default().any,prop_types_default().any,prop_types_default().string,prop_types_default().string,prop_types_default().string,prop_types_default().func,prop_types_default().string,prop_types_default().func,prop_types_default().func,prop_types_default().func,prop_types_default().func,prop_types_default().func,prop_types_default().shape({addEventListener:prop_types_default().func,removeEventListener:prop_types_default().func,document:prop_types_default().shape({getElementById:prop_types_default().func,activeElement:prop_types_default().any,body:prop_types_default().any})});var defaultProps$2=(0,tslib_es6.Cl)((0,tslib_es6.Cl)({},defaultProps$3),{getA11yStatusMessage:function getA11yStatusMessage(_a){var isOpen=_a.isOpen,resultCount=_a.resultCount,previousResultCount=_a.previousResultCount;return isOpen?resultCount?resultCount!==previousResultCount?"".concat(resultCount," result").concat(1===resultCount?" is":"s are"," available, use up and down arrow keys to navigate. Press Enter or Space Bar keys to select."):"":"No results are available.":""}}),validatePropTypes$2=noop;const ToggleButtonClick$1=0,ToggleButtonKeyDownArrowDown=1,ToggleButtonKeyDownArrowUp=2,ToggleButtonKeyDownCharacter=3,ToggleButtonKeyDownEscape=4,ToggleButtonKeyDownHome=5,ToggleButtonKeyDownEnd=6,ToggleButtonKeyDownEnter=7,ToggleButtonKeyDownSpaceButton=8,ToggleButtonKeyDownPageUp=9,ToggleButtonKeyDownPageDown=10,ToggleButtonBlur=11,MenuMouseLeave$1=12,ItemMouseMove$1=13,ItemClick$1=14,FunctionToggleMenu$1=15,FunctionOpenMenu$1=16,FunctionCloseMenu$1=17,FunctionSetHighlightedIndex$1=18,FunctionSelectItem$1=19,FunctionSetInputValue$1=20,FunctionReset$2=21;var stateChangeTypes$2=Object.freeze({__proto__:null,ToggleButtonClick:ToggleButtonClick$1,ToggleButtonKeyDownArrowDown,ToggleButtonKeyDownArrowUp,ToggleButtonKeyDownCharacter,ToggleButtonKeyDownEscape,ToggleButtonKeyDownHome,ToggleButtonKeyDownEnd,ToggleButtonKeyDownEnter,ToggleButtonKeyDownSpaceButton,ToggleButtonKeyDownPageUp,ToggleButtonKeyDownPageDown,ToggleButtonBlur,MenuMouseLeave:MenuMouseLeave$1,ItemMouseMove:ItemMouseMove$1,ItemClick:ItemClick$1,FunctionToggleMenu:FunctionToggleMenu$1,FunctionOpenMenu:FunctionOpenMenu$1,FunctionCloseMenu:FunctionCloseMenu$1,FunctionSetHighlightedIndex:FunctionSetHighlightedIndex$1,FunctionSelectItem:FunctionSelectItem$1,FunctionSetInputValue:FunctionSetInputValue$1,FunctionReset:FunctionReset$2});function downshiftSelectReducer(state,action){const{type,props,altKey}=action;let changes;switch(type){case ItemClick$1:changes={isOpen:getDefaultValue$1(props,"isOpen"),highlightedIndex:getDefaultValue$1(props,"highlightedIndex"),selectedItem:props.items[action.index]};break;case ToggleButtonKeyDownCharacter:{const lowercasedKey=action.key,inputValue=`${state.inputValue}${lowercasedKey}`,highlightedIndex=function getItemIndexByCharacterKey(_a){for(var keysSoFar=_a.keysSoFar,highlightedIndex=_a.highlightedIndex,items=_a.items,itemToString=_a.itemToString,getItemNodeFromIndex=_a.getItemNodeFromIndex,lowerCasedKeysSoFar=keysSoFar.toLowerCase(),index=0;index<items.length;index++){var offsetIndex=(index+highlightedIndex+1)%items.length,item=items[offsetIndex];if(void 0!==item&&itemToString(item).toLowerCase().startsWith(lowerCasedKeysSoFar)){var element=getItemNodeFromIndex(offsetIndex);if(!(null==element?void 0:element.hasAttribute("disabled")))return offsetIndex}}return highlightedIndex}({keysSoFar:inputValue,highlightedIndex:!state.isOpen&&state.selectedItem?props.items.indexOf(state.selectedItem):state.highlightedIndex,items:props.items,itemToString:props.itemToString,getItemNodeFromIndex:action.getItemNodeFromIndex});changes={inputValue,highlightedIndex,isOpen:!0}}break;case ToggleButtonKeyDownArrowDown:changes={highlightedIndex:state.isOpen?getNextWrappingIndex(1,state.highlightedIndex,props.items.length,action.getItemNodeFromIndex,!1):altKey&&null==state.selectedItem?-1:getHighlightedIndexOnOpen(props,state,1),isOpen:!0};break;case ToggleButtonKeyDownArrowUp:if(state.isOpen&&altKey)changes={isOpen:getDefaultValue$1(props,"isOpen"),highlightedIndex:getDefaultValue$1(props,"highlightedIndex"),...state.highlightedIndex>=0&&{selectedItem:props.items[state.highlightedIndex]}};else{changes={highlightedIndex:state.isOpen?getNextWrappingIndex(-1,state.highlightedIndex,props.items.length,action.getItemNodeFromIndex,!1):getHighlightedIndexOnOpen(props,state,-1),isOpen:!0}}break;case ToggleButtonKeyDownEnter:case ToggleButtonKeyDownSpaceButton:changes={isOpen:getDefaultValue$1(props,"isOpen"),highlightedIndex:getDefaultValue$1(props,"highlightedIndex"),...state.highlightedIndex>=0&&{selectedItem:props.items[state.highlightedIndex]}};break;case ToggleButtonKeyDownHome:changes={highlightedIndex:getNextNonDisabledIndex(1,0,props.items.length,action.getItemNodeFromIndex,!1),isOpen:!0};break;case ToggleButtonKeyDownEnd:changes={highlightedIndex:getNextNonDisabledIndex(-1,props.items.length-1,props.items.length,action.getItemNodeFromIndex,!1),isOpen:!0};break;case ToggleButtonKeyDownPageUp:changes={highlightedIndex:getNextWrappingIndex(-10,state.highlightedIndex,props.items.length,action.getItemNodeFromIndex,!1)};break;case ToggleButtonKeyDownPageDown:changes={highlightedIndex:getNextWrappingIndex(10,state.highlightedIndex,props.items.length,action.getItemNodeFromIndex,!1)};break;case ToggleButtonKeyDownEscape:changes={isOpen:!1,highlightedIndex:-1};break;case ToggleButtonBlur:changes={isOpen:!1,highlightedIndex:-1,...state.highlightedIndex>=0&&{selectedItem:props.items[state.highlightedIndex]}};break;case FunctionSelectItem$1:changes={selectedItem:action.selectedItem};break;default:return downshiftCommonReducer(state,action,stateChangeTypes$2)}return{...state,...changes}}function useSelect(userProps){void 0===userProps&&(userProps={}),validatePropTypes$2(userProps,useSelect);const props={...defaultProps$2,...userProps},{items,scrollIntoView,environment,itemToString,getA11ySelectionMessage,getA11yStatusMessage}=props,initialState=getInitialState$2(props),[state,dispatch]=useControlledReducer$1(downshiftSelectReducer,initialState,props),{isOpen,highlightedIndex,selectedItem,inputValue}=state,toggleButtonRef=(0,react.useRef)(null),menuRef=(0,react.useRef)(null),itemRefs=(0,react.useRef)({}),clearTimeoutRef=(0,react.useRef)(null),elementIds=useElementIds(props),previousResultCountRef=(0,react.useRef)(),isInitialMountRef=(0,react.useRef)(!0),latest=useLatestRef({state,props}),getItemNodeFromIndex=(0,react.useCallback)((index=>itemRefs.current[elementIds.getItemId(index)]),[elementIds]);useA11yMessageSetter(getA11yStatusMessage,[isOpen,highlightedIndex,inputValue,items],{isInitialMount:isInitialMountRef.current,previousResultCount:previousResultCountRef.current,items,environment,itemToString,...state}),useA11yMessageSetter(getA11ySelectionMessage,[selectedItem],{isInitialMount:isInitialMountRef.current,previousResultCount:previousResultCountRef.current,items,environment,itemToString,...state});const shouldScrollRef=useScrollIntoView({menuElement:menuRef.current,highlightedIndex,isOpen,itemRefs,scrollIntoView,getItemNodeFromIndex});(0,react.useEffect)((()=>(clearTimeoutRef.current=debounce((outerDispatch=>{outerDispatch({type:FunctionSetInputValue$1,inputValue:""})}),500),()=>{clearTimeoutRef.current.cancel()})),[]),(0,react.useEffect)((()=>{inputValue&&clearTimeoutRef.current(dispatch)}),[dispatch,inputValue]),useControlPropsValidator({isInitialMount:isInitialMountRef.current,props,state}),(0,react.useEffect)((()=>{isInitialMountRef.current||(previousResultCountRef.current=items.length)}));const mouseAndTouchTrackersRef=useMouseAndTouchTracker(isOpen,[menuRef,toggleButtonRef],environment,(()=>{dispatch({type:ToggleButtonBlur})})),setGetterPropCallInfo=useGetterPropsCalledChecker("getMenuProps","getToggleButtonProps");(0,react.useEffect)((()=>(isInitialMountRef.current=!1,()=>{isInitialMountRef.current=!0})),[]),(0,react.useEffect)((()=>{isOpen||(itemRefs.current={})}),[isOpen]);const toggleButtonKeyDownHandlers=(0,react.useMemo)((()=>({ArrowDown(event){event.preventDefault(),dispatch({type:ToggleButtonKeyDownArrowDown,getItemNodeFromIndex,altKey:event.altKey})},ArrowUp(event){event.preventDefault(),dispatch({type:ToggleButtonKeyDownArrowUp,getItemNodeFromIndex,altKey:event.altKey})},Home(event){event.preventDefault(),dispatch({type:ToggleButtonKeyDownHome,getItemNodeFromIndex})},End(event){event.preventDefault(),dispatch({type:ToggleButtonKeyDownEnd,getItemNodeFromIndex})},Escape(){latest.current.state.isOpen&&dispatch({type:ToggleButtonKeyDownEscape})},Enter(event){event.preventDefault(),dispatch({type:latest.current.state.isOpen?ToggleButtonKeyDownEnter:ToggleButtonClick$1})},PageUp(event){latest.current.state.isOpen&&(event.preventDefault(),dispatch({type:ToggleButtonKeyDownPageUp,getItemNodeFromIndex}))},PageDown(event){latest.current.state.isOpen&&(event.preventDefault(),dispatch({type:ToggleButtonKeyDownPageDown,getItemNodeFromIndex}))}," "(event){event.preventDefault(),dispatch({type:latest.current.state.isOpen?ToggleButtonKeyDownSpaceButton:ToggleButtonClick$1})}})),[dispatch,getItemNodeFromIndex,latest]),toggleMenu=(0,react.useCallback)((()=>{dispatch({type:FunctionToggleMenu$1})}),[dispatch]),closeMenu=(0,react.useCallback)((()=>{dispatch({type:FunctionCloseMenu$1})}),[dispatch]),openMenu=(0,react.useCallback)((()=>{dispatch({type:FunctionOpenMenu$1})}),[dispatch]),setHighlightedIndex=(0,react.useCallback)((newHighlightedIndex=>{dispatch({type:FunctionSetHighlightedIndex$1,highlightedIndex:newHighlightedIndex})}),[dispatch]),selectItem=(0,react.useCallback)((newSelectedItem=>{dispatch({type:FunctionSelectItem$1,selectedItem:newSelectedItem})}),[dispatch]),reset=(0,react.useCallback)((()=>{dispatch({type:FunctionReset$2})}),[dispatch]),setInputValue=(0,react.useCallback)((newInputValue=>{dispatch({type:FunctionSetInputValue$1,inputValue:newInputValue})}),[dispatch]),getLabelProps=(0,react.useCallback)((labelProps=>({id:elementIds.labelId,htmlFor:elementIds.toggleButtonId,...labelProps})),[elementIds]),getMenuProps=(0,react.useCallback)((function(_temp,_temp2){let{onMouseLeave,refKey="ref",onKeyDown,onBlur,ref,...rest}=void 0===_temp?{}:_temp,{suppressRefError=!1}=void 0===_temp2?{}:_temp2;return setGetterPropCallInfo("getMenuProps",suppressRefError,refKey,menuRef),{[refKey]:handleRefs(ref,(menuNode=>{menuRef.current=menuNode})),id:elementIds.menuId,role:"listbox","aria-labelledby":elementIds.labelId,tabIndex:-1,onMouseLeave:callAllEventHandlers(onMouseLeave,(()=>{dispatch({type:MenuMouseLeave$1})})),...rest}}),[dispatch,setGetterPropCallInfo,elementIds]);return{getToggleButtonProps:(0,react.useCallback)((function(_temp3,_temp4){let{onBlur,onClick,onKeyDown,refKey="ref",ref,...rest}=void 0===_temp3?{}:_temp3,{suppressRefError=!1}=void 0===_temp4?{}:_temp4;const latestState=latest.current.state,toggleButtonHandleClick=()=>{dispatch({type:ToggleButtonClick$1})},toggleButtonHandleKeyDown=event=>{const key=normalizeArrowKey(event);key&&toggleButtonKeyDownHandlers[key]?toggleButtonKeyDownHandlers[key](event):function isAcceptedCharacterKey(key){return/^\S{1}$/.test(key)}(key)&&dispatch({type:ToggleButtonKeyDownCharacter,key,getItemNodeFromIndex})},toggleProps={[refKey]:handleRefs(ref,(toggleButtonNode=>{toggleButtonRef.current=toggleButtonNode})),"aria-activedescendant":latestState.isOpen&&latestState.highlightedIndex>-1?elementIds.getItemId(latestState.highlightedIndex):"","aria-controls":elementIds.menuId,"aria-expanded":latest.current.state.isOpen,"aria-haspopup":"listbox","aria-labelledby":`${elementIds.labelId}`,id:elementIds.toggleButtonId,role:"combobox",tabIndex:0,onBlur:callAllEventHandlers(onBlur,(()=>{latestState.isOpen&&!mouseAndTouchTrackersRef.current.isMouseDown&&dispatch({type:ToggleButtonBlur})})),...rest};return rest.disabled||(toggleProps.onClick=callAllEventHandlers(onClick,toggleButtonHandleClick),toggleProps.onKeyDown=callAllEventHandlers(onKeyDown,toggleButtonHandleKeyDown)),setGetterPropCallInfo("getToggleButtonProps",suppressRefError,refKey,toggleButtonRef),toggleProps}),[latest,elementIds,setGetterPropCallInfo,dispatch,mouseAndTouchTrackersRef,toggleButtonKeyDownHandlers,getItemNodeFromIndex]),getLabelProps,getMenuProps,getItemProps:(0,react.useCallback)((function(_temp5){let{item:itemProp,index:indexProp,onMouseMove,onClick,refKey="ref",ref,disabled,...rest}=void 0===_temp5?{}:_temp5;const{state:latestState,props:latestProps}=latest.current,item=itemProp??items[indexProp],index=getItemIndex(indexProp,item,latestProps.items),itemHandleClick=()=>{dispatch({type:ItemClick$1,index})},itemIndex=getItemIndex(index,item,latestProps.items);if(itemIndex<0)throw new Error("Pass either item or item index in getItemProps!");const itemProps={disabled,role:"option","aria-selected":`${item===selectedItem}`,id:elementIds.getItemId(itemIndex),[refKey]:handleRefs(ref,(itemNode=>{itemNode&&(itemRefs.current[elementIds.getItemId(itemIndex)]=itemNode)})),...rest};return disabled||(itemProps.onClick=callAllEventHandlers(onClick,itemHandleClick)),itemProps.onMouseMove=callAllEventHandlers(onMouseMove,(()=>{index!==latestState.highlightedIndex&&(shouldScrollRef.current=!1,dispatch({type:ItemMouseMove$1,index,disabled}))})),itemProps}),[latest,items,selectedItem,elementIds,shouldScrollRef,dispatch]),toggleMenu,openMenu,closeMenu,setHighlightedIndex,selectItem,reset,setInputValue,highlightedIndex,isOpen,selectedItem,inputValue}}useSelect.stateChangeTypes=stateChangeTypes$2;const InputKeyDownArrowDown=0,InputKeyDownArrowUp=1,InputKeyDownEscape=2,InputKeyDownHome=3,InputKeyDownEnd=4,InputKeyDownPageUp=5,InputKeyDownPageDown=6,InputKeyDownEnter=7,InputChange=8,InputBlur=9,InputFocus=10,MenuMouseLeave=11,ItemMouseMove=12,ItemClick=13,ToggleButtonClick=14,FunctionToggleMenu=15,FunctionOpenMenu=16,FunctionCloseMenu=17,FunctionSetHighlightedIndex=18,FunctionSelectItem=19,FunctionSetInputValue=20,FunctionReset$1=21,ControlledPropUpdatedSelectedItem=22;var stateChangeTypes$1=Object.freeze({__proto__:null,InputKeyDownArrowDown,InputKeyDownArrowUp,InputKeyDownEscape,InputKeyDownHome,InputKeyDownEnd,InputKeyDownPageUp,InputKeyDownPageDown,InputKeyDownEnter,InputChange,InputBlur,InputFocus,MenuMouseLeave,ItemMouseMove,ItemClick,ToggleButtonClick,FunctionToggleMenu,FunctionOpenMenu,FunctionCloseMenu,FunctionSetHighlightedIndex,FunctionSelectItem,FunctionSetInputValue,FunctionReset:FunctionReset$1,ControlledPropUpdatedSelectedItem});prop_types_default().array.isRequired,prop_types_default().func,prop_types_default().func,prop_types_default().func,prop_types_default().number,prop_types_default().number,prop_types_default().number,prop_types_default().bool,prop_types_default().bool,prop_types_default().bool,prop_types_default().any,prop_types_default().any,prop_types_default().any,prop_types_default().string,prop_types_default().string,prop_types_default().string,prop_types_default().string,prop_types_default().string,prop_types_default().string,prop_types_default().func,prop_types_default().string,prop_types_default().string,prop_types_default().func,prop_types_default().func,prop_types_default().func,prop_types_default().func,prop_types_default().func,prop_types_default().func,prop_types_default().shape({addEventListener:prop_types_default().func,removeEventListener:prop_types_default().func,document:prop_types_default().shape({getElementById:prop_types_default().func,activeElement:prop_types_default().any,body:prop_types_default().any})});let validatePropTypes$1=noop;const defaultProps$1={...defaultProps$3,getA11yStatusMessage:getA11yStatusMessage$1};function downshiftUseComboboxReducer(state,action){const{type,props,altKey}=action;let changes;switch(type){case ItemClick:changes={isOpen:getDefaultValue$1(props,"isOpen"),highlightedIndex:getDefaultValue$1(props,"highlightedIndex"),selectedItem:props.items[action.index],inputValue:props.itemToString(props.items[action.index])};break;case InputKeyDownArrowDown:changes=state.isOpen?{highlightedIndex:getNextWrappingIndex(1,state.highlightedIndex,props.items.length,action.getItemNodeFromIndex,!0)}:{highlightedIndex:altKey&&null==state.selectedItem?-1:getHighlightedIndexOnOpen(props,state,1,action.getItemNodeFromIndex),isOpen:props.items.length>=0};break;case InputKeyDownArrowUp:changes=state.isOpen?altKey?{isOpen:getDefaultValue$1(props,"isOpen"),highlightedIndex:getDefaultValue$1(props,"highlightedIndex"),...state.highlightedIndex>=0&&{selectedItem:props.items[state.highlightedIndex],inputValue:props.itemToString(props.items[state.highlightedIndex])}}:{highlightedIndex:getNextWrappingIndex(-1,state.highlightedIndex,props.items.length,action.getItemNodeFromIndex,!0)}:{highlightedIndex:getHighlightedIndexOnOpen(props,state,-1,action.getItemNodeFromIndex),isOpen:props.items.length>=0};break;case InputKeyDownEnter:changes={isOpen:getDefaultValue$1(props,"isOpen"),highlightedIndex:getDefaultValue$1(props,"highlightedIndex"),...state.highlightedIndex>=0&&{selectedItem:props.items[state.highlightedIndex],inputValue:props.itemToString(props.items[state.highlightedIndex])}};break;case InputKeyDownEscape:changes={isOpen:!1,highlightedIndex:-1,...!state.isOpen&&{selectedItem:null,inputValue:""}};break;case InputKeyDownPageUp:changes={highlightedIndex:getNextWrappingIndex(-10,state.highlightedIndex,props.items.length,action.getItemNodeFromIndex,!1)};break;case InputKeyDownPageDown:changes={highlightedIndex:getNextWrappingIndex(10,state.highlightedIndex,props.items.length,action.getItemNodeFromIndex,!1)};break;case InputKeyDownHome:changes={highlightedIndex:getNextNonDisabledIndex(1,0,props.items.length,action.getItemNodeFromIndex,!1)};break;case InputKeyDownEnd:changes={highlightedIndex:getNextNonDisabledIndex(-1,props.items.length-1,props.items.length,action.getItemNodeFromIndex,!1)};break;case InputBlur:changes={isOpen:!1,highlightedIndex:-1,...state.highlightedIndex>=0&&action.selectItem&&{selectedItem:props.items[state.highlightedIndex],inputValue:props.itemToString(props.items[state.highlightedIndex])}};break;case InputChange:changes={isOpen:!0,highlightedIndex:getDefaultValue$1(props,"highlightedIndex"),inputValue:action.inputValue};break;case InputFocus:changes={isOpen:!0,highlightedIndex:getHighlightedIndexOnOpen(props,state,0)};break;case FunctionSelectItem:changes={selectedItem:action.selectedItem,inputValue:props.itemToString(action.selectedItem)};break;case ControlledPropUpdatedSelectedItem:changes={inputValue:action.inputValue};break;default:return downshiftCommonReducer(state,action,stateChangeTypes$1)}return{...state,...changes}}function useCombobox(userProps){void 0===userProps&&(userProps={}),validatePropTypes$1(userProps,useCombobox);const props={...defaultProps$1,...userProps},{initialIsOpen,defaultIsOpen,items,scrollIntoView,environment,getA11yStatusMessage,getA11ySelectionMessage,itemToString}=props,initialState=function getInitialState$1(props){const initialState=getInitialState$2(props),{selectedItem}=initialState;let{inputValue}=initialState;return""===inputValue&&selectedItem&&void 0===props.defaultInputValue&&void 0===props.initialInputValue&&void 0===props.inputValue&&(inputValue=props.itemToString(selectedItem)),{...initialState,inputValue}}(props),[state,dispatch]=function useControlledReducer(reducer,initialState,props){const previousSelectedItemRef=(0,react.useRef)(),[state,dispatch]=useEnhancedReducer(reducer,initialState,props);return(0,react.useEffect)((()=>{isControlledProp(props,"selectedItem")&&(previousSelectedItemRef.current!==props.selectedItem&&dispatch({type:ControlledPropUpdatedSelectedItem,inputValue:props.itemToString(props.selectedItem)}),previousSelectedItemRef.current=state.selectedItem===previousSelectedItemRef.current?props.selectedItem:state.selectedItem)})),[getState(state,props),dispatch]}(downshiftUseComboboxReducer,initialState,props),{isOpen,highlightedIndex,selectedItem,inputValue}=state,menuRef=(0,react.useRef)(null),itemRefs=(0,react.useRef)({}),inputRef=(0,react.useRef)(null),toggleButtonRef=(0,react.useRef)(null),isInitialMountRef=(0,react.useRef)(!0),elementIds=useElementIds(props),previousResultCountRef=(0,react.useRef)(),latest=useLatestRef({state,props}),getItemNodeFromIndex=(0,react.useCallback)((index=>itemRefs.current[elementIds.getItemId(index)]),[elementIds]);useA11yMessageSetter(getA11yStatusMessage,[isOpen,highlightedIndex,inputValue,items],{isInitialMount:isInitialMountRef.current,previousResultCount:previousResultCountRef.current,items,environment,itemToString,...state}),useA11yMessageSetter(getA11ySelectionMessage,[selectedItem],{isInitialMount:isInitialMountRef.current,previousResultCount:previousResultCountRef.current,items,environment,itemToString,...state});const shouldScrollRef=useScrollIntoView({menuElement:menuRef.current,highlightedIndex,isOpen,itemRefs,scrollIntoView,getItemNodeFromIndex});useControlPropsValidator({isInitialMount:isInitialMountRef.current,props,state}),(0,react.useEffect)((()=>{(initialIsOpen||defaultIsOpen||isOpen)&&inputRef.current&&inputRef.current.focus()}),[]),(0,react.useEffect)((()=>{isInitialMountRef.current||(previousResultCountRef.current=items.length)}));const mouseAndTouchTrackersRef=useMouseAndTouchTracker(isOpen,[inputRef,menuRef,toggleButtonRef],environment,(()=>{dispatch({type:InputBlur,selectItem:!1})})),setGetterPropCallInfo=useGetterPropsCalledChecker("getInputProps","getMenuProps");(0,react.useEffect)((()=>(isInitialMountRef.current=!1,()=>{isInitialMountRef.current=!0})),[]),(0,react.useEffect)((()=>{isOpen?document.activeElement!==inputRef.current&&inputRef?.current?.focus():itemRefs.current={}}),[isOpen]);const inputKeyDownHandlers=(0,react.useMemo)((()=>({ArrowDown(event){event.preventDefault(),dispatch({type:InputKeyDownArrowDown,altKey:event.altKey,getItemNodeFromIndex})},ArrowUp(event){event.preventDefault(),dispatch({type:InputKeyDownArrowUp,altKey:event.altKey,getItemNodeFromIndex})},Home(event){latest.current.state.isOpen&&(event.preventDefault(),dispatch({type:InputKeyDownHome,getItemNodeFromIndex}))},End(event){latest.current.state.isOpen&&(event.preventDefault(),dispatch({type:InputKeyDownEnd,getItemNodeFromIndex}))},Escape(event){const latestState=latest.current.state;(latestState.isOpen||latestState.inputValue||latestState.selectedItem||latestState.highlightedIndex>-1)&&(event.preventDefault(),dispatch({type:InputKeyDownEscape}))},Enter(event){latest.current.state.isOpen&&229!==event.which&&(event.preventDefault(),dispatch({type:InputKeyDownEnter,getItemNodeFromIndex}))},PageUp(event){latest.current.state.isOpen&&(event.preventDefault(),dispatch({type:InputKeyDownPageUp,getItemNodeFromIndex}))},PageDown(event){latest.current.state.isOpen&&(event.preventDefault(),dispatch({type:InputKeyDownPageDown,getItemNodeFromIndex}))}})),[dispatch,latest,getItemNodeFromIndex]),getLabelProps=(0,react.useCallback)((labelProps=>({id:elementIds.labelId,htmlFor:elementIds.inputId,...labelProps})),[elementIds]),getMenuProps=(0,react.useCallback)((function(_temp,_temp2){let{onMouseLeave,refKey="ref",ref,...rest}=void 0===_temp?{}:_temp,{suppressRefError=!1}=void 0===_temp2?{}:_temp2;return setGetterPropCallInfo("getMenuProps",suppressRefError,refKey,menuRef),{[refKey]:handleRefs(ref,(menuNode=>{menuRef.current=menuNode})),id:elementIds.menuId,role:"listbox","aria-labelledby":elementIds.labelId,onMouseLeave:callAllEventHandlers(onMouseLeave,(()=>{dispatch({type:MenuMouseLeave})})),...rest}}),[dispatch,setGetterPropCallInfo,elementIds]),getItemProps=(0,react.useCallback)((function(_temp3){let{item,index,refKey="ref",ref,onMouseMove,onMouseDown,onClick,onPress,disabled,...rest}=void 0===_temp3?{}:_temp3;const{props:latestProps,state:latestState}=latest.current,itemIndex=getItemIndex(index,item,latestProps.items);if(itemIndex<0)throw new Error("Pass either item or item index in getItemProps!");const customClickHandler=onClick;return{[refKey]:handleRefs(ref,(itemNode=>{itemNode&&(itemRefs.current[elementIds.getItemId(itemIndex)]=itemNode)})),disabled,role:"option","aria-selected":`${itemIndex===latestState.highlightedIndex}`,id:elementIds.getItemId(itemIndex),...!disabled&&{onClick:callAllEventHandlers(customClickHandler,(()=>{dispatch({type:ItemClick,index})}))},onMouseMove:callAllEventHandlers(onMouseMove,(()=>{index!==latestState.highlightedIndex&&(shouldScrollRef.current=!1,dispatch({type:ItemMouseMove,index,disabled}))})),onMouseDown:callAllEventHandlers(onMouseDown,(e=>e.preventDefault())),...rest}}),[dispatch,latest,shouldScrollRef,elementIds]),getToggleButtonProps=(0,react.useCallback)((function(_temp4){let{onClick,onPress,refKey="ref",ref,...rest}=void 0===_temp4?{}:_temp4;const latestState=latest.current.state;return{[refKey]:handleRefs(ref,(toggleButtonNode=>{toggleButtonRef.current=toggleButtonNode})),"aria-controls":elementIds.menuId,"aria-expanded":latestState.isOpen,id:elementIds.toggleButtonId,tabIndex:-1,...!rest.disabled&&{onClick:callAllEventHandlers(onClick,(()=>{dispatch({type:ToggleButtonClick})}))},...rest}}),[dispatch,latest,elementIds]),getInputProps=(0,react.useCallback)((function(_temp5,_temp6){let{onKeyDown,onChange,onInput,onFocus,onBlur,onChangeText,refKey="ref",ref,...rest}=void 0===_temp5?{}:_temp5,{suppressRefError=!1}=void 0===_temp6?{}:_temp6;setGetterPropCallInfo("getInputProps",suppressRefError,refKey,inputRef);const latestState=latest.current.state,inputHandleKeyDown=event=>{const key=normalizeArrowKey(event);key&&inputKeyDownHandlers[key]&&inputKeyDownHandlers[key](event)},inputHandleChange=event=>{dispatch({type:InputChange,inputValue:event.target.value})},inputHandleBlur=()=>{latestState.isOpen&&!mouseAndTouchTrackersRef.current.isMouseDown&&dispatch({type:InputBlur,selectItem:!0})},inputHandleFocus=()=>{latestState.isOpen||dispatch({type:InputFocus})};let eventHandlers={};return rest.disabled||(eventHandlers={onChange:callAllEventHandlers(onChange,onInput,inputHandleChange),onKeyDown:callAllEventHandlers(onKeyDown,inputHandleKeyDown),onBlur:callAllEventHandlers(onBlur,inputHandleBlur),onFocus:callAllEventHandlers(onFocus,inputHandleFocus)}),{[refKey]:handleRefs(ref,(inputNode=>{inputRef.current=inputNode})),"aria-activedescendant":latestState.isOpen&&latestState.highlightedIndex>-1?elementIds.getItemId(latestState.highlightedIndex):"","aria-autocomplete":"list","aria-controls":elementIds.menuId,"aria-expanded":latestState.isOpen,"aria-labelledby":elementIds.labelId,autoComplete:"off",id:elementIds.inputId,role:"combobox",value:latestState.inputValue,...eventHandlers,...rest}}),[dispatch,inputKeyDownHandlers,latest,mouseAndTouchTrackersRef,setGetterPropCallInfo,elementIds]),toggleMenu=(0,react.useCallback)((()=>{dispatch({type:FunctionToggleMenu})}),[dispatch]),closeMenu=(0,react.useCallback)((()=>{dispatch({type:FunctionCloseMenu})}),[dispatch]),openMenu=(0,react.useCallback)((()=>{dispatch({type:FunctionOpenMenu})}),[dispatch]),setHighlightedIndex=(0,react.useCallback)((newHighlightedIndex=>{dispatch({type:FunctionSetHighlightedIndex,highlightedIndex:newHighlightedIndex})}),[dispatch]),selectItem=(0,react.useCallback)((newSelectedItem=>{dispatch({type:FunctionSelectItem,selectedItem:newSelectedItem})}),[dispatch]);return{getItemProps,getLabelProps,getMenuProps,getInputProps,getToggleButtonProps,toggleMenu,openMenu,closeMenu,setHighlightedIndex,setInputValue:(0,react.useCallback)((newInputValue=>{dispatch({type:FunctionSetInputValue,inputValue:newInputValue})}),[dispatch]),selectItem,reset:(0,react.useCallback)((()=>{dispatch({type:FunctionReset$1})}),[dispatch]),highlightedIndex,isOpen,selectedItem,inputValue}}useCombobox.stateChangeTypes=stateChangeTypes$1;prop_types_default().array,prop_types_default().array,prop_types_default().array,prop_types_default().func,prop_types_default().func,prop_types_default().func,prop_types_default().number,prop_types_default().number,prop_types_default().number,prop_types_default().func,prop_types_default().func,prop_types_default().string,prop_types_default().string,prop_types_default().shape({addEventListener:prop_types_default().func,removeEventListener:prop_types_default().func,document:prop_types_default().shape({getElementById:prop_types_default().func,activeElement:prop_types_default().any,body:prop_types_default().any})})}}]);