"use strict";(self.webpackChunk_scality_core_ui=self.webpackChunk_scality_core_ui||[]).push([[71953],{"./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}__webpack_require__.d(__webpack_exports__,{A:()=>_objectWithoutPropertiesLoose})},"./stories/linecharttemporal.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CPUUsage:()=>CPUUsage,IOPS:()=>IOPS,__namedExportsOrder:()=>__namedExportsOrder,default:()=>linecharttemporal_stories});var react=__webpack_require__("./node_modules/react/index.js"),react_router_dom=__webpack_require__("./node_modules/react-router-dom/esm/react-router-dom.js"),SyncedCursorCharts=__webpack_require__("./src/lib/components/vegachartv2/SyncedCursorCharts.tsx"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),polished_es=__webpack_require__("./node_modules/polished/dist/polished.es.js"),vega_module=__webpack_require__("./node_modules/vega/build/vega.module.js"),theme=__webpack_require__("./src/lib/style/theme.ts"),VegaChartV2_component=__webpack_require__("./src/lib/components/vegachartv2/VegaChartV2.component.tsx"),Text_component=__webpack_require__("./src/lib/components/text/Text.component.tsx"),constants=__webpack_require__("./src/lib/components/constants.ts");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:String(i)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function normlizeVegaFieldName(fieldName){return fieldName.replace(/(\.)/g,"VEGADOESNTSUPPORTDOTINFIELDNAME")}function getUnitLabel(unitRange,maxValue){unitRange.sort(((unitA,unitB)=>unitA.threshold-unitB.threshold));var index=unitRange.findIndex((range=>range.threshold>maxValue));return-1===index&&(index=unitRange.length),0===index?{valueBase:unitRange[index].threshold,unitLabel:unitRange[index].label}:{valueBase:unitRange[index-1].threshold,unitLabel:unitRange[index-1].label}}function addMissingDataPoint(orginalValues,startingTimeStamp,sampleDuration,sampleFrequency){if(!orginalValues||void 0===startingTimeStamp||!sampleDuration||!sampleFrequency||startingTimeStamp<0||sampleDuration<=0||sampleFrequency<=0)return[];for(var newValues=[],numberOfDataPoints=sampleDuration/sampleFrequency+1,samplingPointTime=startingTimeStamp,i=0;i<numberOfDataPoints;i++)newValues.push([samplingPointTime,constants.qn]),samplingPointTime+=sampleFrequency;if(0===newValues.length)return[];for(var nextIndex=0,_i=0;_i<newValues.length;_i++)orginalValues[nextIndex]&&newValues[_i][0]===orginalValues[nextIndex][0]&&(newValues[_i][1]=orginalValues[nextIndex][1],nextIndex++);return newValues}var getRelativeValue=(value,base)=>value/(base||1),relativeDatumToOriginalDatum=(datum,base)=>Object.fromEntries(Object.entries(datum).map((_ref=>{var[key,value]=_ref;return[key,getAbsoluteValue(value,base)]}))),getAbsoluteValue=(relativeValue,base)=>relativeValue*(base||1),getColorDomains=series=>series.map((serie=>normlizeVegaFieldName(serie.getTooltipLabel(serie.metricPrefix,serie.resource)))),react_router=__webpack_require__("./node_modules/react-router/esm/react-router.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),MetricsTimeSpanContext=(0,react.createContext)(null),MetricsTimeSpanProvider=_ref=>{var{children}=_ref,[queryTimeSpanCode,setQueryTimeSpanCode]=(0,react.useState)(constants.n6[1]),queryTimeSpan=new URLSearchParams((0,react_router.zy)().search).get("from");return(0,react.useEffect)((()=>{if(queryTimeSpan){var _queryTimeSpanCode=constants.n6.find((item=>item.query===queryTimeSpan));_queryTimeSpanCode&&_queryTimeSpanCode.label?setQueryTimeSpanCode(_queryTimeSpanCode):console.error("Unexpected timespan query parameter defined in the URL.")}}),[queryTimeSpan]),(0,jsx_runtime.jsx)(MetricsTimeSpanContext.Provider,{value:queryTimeSpanCode,children})};MetricsTimeSpanProvider.displayName="MetricsTimeSpanProvider";try{MetricsTimeSpanProvider.displayName="MetricsTimeSpanProvider",MetricsTimeSpanProvider.__docgenInfo={description:"",displayName:"MetricsTimeSpanProvider",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/lib/components/linetemporalchart/MetricTimespanProvider.tsx#MetricsTimeSpanProvider"]={docgenInfo:MetricsTimeSpanProvider.__docgenInfo,name:"MetricsTimeSpanProvider",path:"src/lib/components/linetemporalchart/MetricTimespanProvider.tsx#MetricsTimeSpanProvider"})}catch(__react_docgen_typescript_loader_error){}var _templateObject,_templateObject2,_templateObject3,_templateObject4,spacing=__webpack_require__("./src/lib/spacing.tsx"),Loader_component=__webpack_require__("./src/lib/components/loader/Loader.component.tsx"),tooltip=__webpack_require__("./src/lib/components/linetemporalchart/tooltip/index.ts"),Tooltip_component=__webpack_require__("./src/lib/components/tooltip/Tooltip.component.tsx"),Icon_component=__webpack_require__("./src/lib/components/icon/Icon.component.tsx"),_excluded=["series","title","height","startingTimeStamp","unitRange","isLoading","isLegendHidden","yAxisType","yAxisTitle","helpText","renderTooltipSerie","onHover"];function LineTemporalChart_component_ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function LineTemporalChart_component_objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?LineTemporalChart_component_ownKeys(Object(t),!0).forEach((function(r){LineTemporalChart_component_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):LineTemporalChart_component_ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function LineTemporalChart_component_defineProperty(obj,key,value){return(key=function LineTemporalChart_component_toPropertyKey(t){var i=function LineTemporalChart_component_toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:String(i)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}var LineTemporalChartWrapper=styled_components_browser_esm.Ay.div(_templateObject||(_templateObject=_taggedTemplateLiteral(["\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start; // to make sure the header, the graph itself and legend are aligned\n"]))),Legends=styled_components_browser_esm.Ay.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral(["\n  display: flex;\n  align-items: center;\n"]))),LegendStroke=styled_components_browser_esm.Ay.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral(["\n  margin: 0 "," 0 ",";\n  height: ",";\n  background: ",";\n  width: ",";\n"])),spacing.YK.r8,spacing.YK.r16,spacing.YK.r2,(props=>props.isLineDashed?"repeating-linear-gradient(to right,".concat(props.lineColor," 0,").concat(props.lineColor," ").concat(spacing.YK.r1,",transparent ").concat(spacing.YK.r1,",transparent ").concat(spacing.YK.r2,")"):props.lineColor),spacing.YK.r8),ChartHeader=styled_components_browser_esm.Ay.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral(["\n  display: flex;\n  align-items: center;\n"])));(0,vega_module.expressionFunction)("negativeValueFormatter",(function(datum){return Math.abs(datum).toFixed(2)}));var colorRange=[theme.lM,theme.e4,theme.Zp,theme.si,theme.lG,theme.sD,theme.l1,theme.eV,(0,polished_es.a)(.3,theme.lM),(0,polished_es.a)(.3,theme.e4),(0,polished_es.a)(.3,theme.Zp),(0,polished_es.a)(.3,theme.si),(0,polished_es.a)(.3,theme.lG),(0,polished_es.a)(.3,theme.sD),(0,polished_es.a)(.3,theme.l1),(0,polished_es.a)(.3,theme.eV),(0,polished_es.e$)(.2,theme.lM),(0,polished_es.e$)(.2,theme.e4),(0,polished_es.e$)(.2,theme.Zp),(0,polished_es.e$)(.2,theme.si),(0,polished_es.e$)(.3,theme.lG),(0,polished_es.e$)(.3,theme.sD),(0,polished_es.e$)(.3,theme.l1),(0,polished_es.e$)(.3,theme.eV)];function LineTemporalChart(_ref){var{series,title,height,startingTimeStamp,unitRange,isLoading=!1,isLegendHidden=!1,yAxisType="default",yAxisTitle,helpText,renderTooltipSerie,onHover:_onHover}=_ref,rest=_objectWithoutProperties(_ref,_excluded);["default","percentage","symmetrical"].includes(yAxisType)||console.error("Invalid yAxisType props, expected default, percentage or symmetrical but received ".concat(yAxisType)),height||console.error("Please specify the height of the chart."),title||console.error("Please specify the title of the chart."),unitRange&&0===unitRange.length&&console.error("Please provide at least one entry in unitRange.");var vegaViewRef=(0,react.useRef)(),theme=(0,styled_components_browser_esm.DP)(),{frequency,duration}=(()=>{var metricsTimeSpanContext=(0,react.useContext)(MetricsTimeSpanContext);if(!metricsTimeSpanContext)throw new Error("useMetricsTimeSpan hook can't be use outside <MetricsTimeSpanProvider/>");return metricsTimeSpanContext})(),addedMissingDataPointSeries=(0,react.useMemo)((()=>series.map((line=>LineTemporalChart_component_objectSpread(LineTemporalChart_component_objectSpread({},line),{},{data:addMissingDataPoint(line.data,startingTimeStamp,duration,frequency)})))),[series,startingTimeStamp,duration,frequency]),vegaData=(0,react.useMemo)((()=>function convert2VegaData(addedMissingDataPointSeries){var flatArr=[];return addedMissingDataPointSeries.forEach((line=>{line.data.forEach((datum=>{var obj={timestamp:1e3*datum[0],label:normlizeVegaFieldName(line.getTooltipLabel(line.metricPrefix,line.resource)),resource:line.resource,value:datum[1]&&datum[1]!==constants.qn?Number(datum[1]):constants.qn,isNegativeValue:"read"===line.metricPrefix||"out"===line.metricPrefix,isDashed:line.isLineDashed||!1};flatArr.push(obj)}))})),flatArr}(addedMissingDataPointSeries)),[addedMissingDataPointSeries]),maxValue=(0,react.useMemo)((()=>Math.max.apply(Math,vegaData.map((function(datum){return datum.value&&"number"==typeof datum.value?datum.value:0})))),[vegaData]),valueBase=(0,react.useMemo)((()=>unitRange?getUnitLabel(unitRange,maxValue).valueBase:1),[maxValue,unitRange]),vegaSpecValues=(unitRange?function convertDataBaseValue(data,base){return data.map((datum=>_objectSpread(_objectSpread({},datum),{},{value:"number"==typeof datum.value?getRelativeValue(datum.value,base):constants.qn})))}(vegaData,valueBase):vegaData).map((data=>data.isNegativeValue&&data.value&&"number"==typeof data.value?LineTemporalChart_component_objectSpread(LineTemporalChart_component_objectSpread({},data),{},{value:0-data.value}):LineTemporalChart_component_objectSpread({},data))),customizedColorRange=(0,react.useMemo)((()=>{var customizedColors=[];return series.map((line=>{if(line.color)return customizedColors.push(line.color)})),customizedColors}),[series]),seriesResources=[...new Set(series.map((serie=>serie.resource)))],legendLabels=(0,react.useMemo)((()=>{var uniqueLabel=[];return series.forEach(((serie,index)=>{if(serie.getLegendLabel){var legend=serie.getLegendLabel(serie.metricPrefix,serie.resource);if(!uniqueLabel.find((uLabel=>uLabel===legend))){var serieIndex="symmetrical"!==yAxisType||customizedColorRange.length?index:seriesResources.findIndex((serieResource=>serieResource===serie.resource));uniqueLabel.push({legend,serie,serieIndex})}}})),uniqueLabel}),[series]),tooltipLabels=(0,react.useMemo)((()=>series.map((line=>line.getTooltipLabel(line.metricPrefix,line.resource)))),[series]),syncedVerticalRuler={mark:"rule",encoding:{x:{datum:{expr:"toDate(cursorX)"}},color:{value:theme.selectedActive},size:{value:0,condition:{test:"isCursorDisplayed",value:1}}}},syncedVerticalRulerPercentage={mark:"rule",encoding:{x:{datum:{expr:"toDate(cursorX)"}},y:{datum:0},y2:{datum:100},color:{value:theme.highlight,opacity:.3},size:{value:0,condition:{test:"isCursorDisplayed",value:1}}}},syncedVerticalRulerSymmetrical={mark:"rule",encoding:{x:{datum:{expr:"toDate(cursorX)"}},y:{expr:"-yAxisMaxValue"},y2:{expr:"yAxisMaxValue"},color:{value:theme.highlight,opacity:.3},size:{value:0,condition:{test:"isCursorDisplayed",value:1}}}},xAxis={field:"timestamp",type:"temporal",axis:{format:"%d %b %H:%M",ticks:!0,tickCount:5,labelColor:theme.textSecondary,labelSeparation:12},title:null},yAxis=(0,react.useMemo)((()=>({field:"value",type:"quantitative",axis:{title:yAxisTitle||" ",orient:"right",translate:-5,tickOffset:5,labelBaseline:"middle",labelPadding:6,labelFlush:!0},scale:"symmetrical"===yAxisType?{domain:[{expr:"-yAxisMaxValue"},{expr:"yAxisMaxValue"}]}:"percentage"===yAxisType?{domain:[0,100]}:void 0})),[yAxisTitle,yAxisType]),symmetricalColorRange="symmetrical"!==yAxisType?colorRange:series.map((serie=>colorRange[seriesResources.indexOf(serie.resource)])),color={field:"label",type:"nominal",scale:{domain:getColorDomains(series),range:customizedColorRange.length?customizedColorRange:symmetricalColorRange},legend:null},tooltipConfig=(0,react.useMemo)((()=>{return(fields=>{var tooltipConfigBase={transform:[{pivot:"label",value:"value",groupby:["timestamp"]}],mark:"rule",encoding:{x:xAxis,opacity:{condition:{value:0,selection:"hover"},value:0},tooltip:[{field:"timestamp",type:"temporal",axis:{format:"%d %b %H:%M:%S",ticks:!0,tickCount:4,labelAngle:-50,labelColor:"#B5B5B5"},title:"title"}]},selection:{hover:{type:"single",fields:["timestamp"],nearest:!0,on:"mouseover",empty:"none",clear:"mouseout"}}};if(fields.length){var newFields=[...tooltipConfigBase.encoding.tooltip,...fields],newConfig=Object.assign({},tooltipConfigBase);return newConfig.encoding.tooltip=newFields,newConfig}return tooltipConfigBase})((res=[],tooltipLabels.forEach((label=>{res.push({field:"".concat(normlizeVegaFieldName(label)),type:"quantitative",title:"".concat(label),format:".2f",formatType:"negativeValueFormatter"})})),res));var res}),[tooltipLabels]);(0,react.useLayoutEffect)((()=>{vegaViewRef.current&&"symmetrical"===yAxisType&&vegaViewRef.current.signal("yAxisMaxValue",Math.ceil(getRelativeValue(maxValue,valueBase))).run()}),[maxValue,valueBase,vegaViewRef,yAxisType]);var spec=LineTemporalChart_component_objectSpread({data:{values:vegaSpecValues},height,width:"container",mark:{type:"line",tooltip:!0},params:[{name:"cursorX",value:(0,SyncedCursorCharts.UO)().cursorX||Date.now()},{name:"isCursorDisplayed",value:!1}],layer:[{encoding:{x:xAxis,y:yAxis,strokeDash:{field:"isDashed",type:"nominal",legend:null,condition:{test:"datum.isDashed === true",value:[4,2]}},color,opacity:{condition:{test:"datum.isDashed === true",value:.6},value:1}},layer:[{mark:{type:"line",strokeWidth:1}},{mark:"point",encoding:{size:{value:0,condition:{selection:"hover",value:10}}}},"percentage"===yAxisType?LineTemporalChart_component_objectSpread(LineTemporalChart_component_objectSpread({},syncedVerticalRuler),{},{encoding:LineTemporalChart_component_objectSpread(LineTemporalChart_component_objectSpread({},syncedVerticalRuler.encoding),syncedVerticalRulerPercentage.encoding)}):"symmetrical"===yAxisType?LineTemporalChart_component_objectSpread(LineTemporalChart_component_objectSpread({},syncedVerticalRuler),{},{encoding:LineTemporalChart_component_objectSpread(LineTemporalChart_component_objectSpread({},syncedVerticalRuler.encoding),syncedVerticalRulerSymmetrical.encoding)}):syncedVerticalRuler]},tooltipConfig]},rest),seperationLine={mark:"rule",encoding:{y:{datum:0},color:{value:theme.border,opacity:1}}};"symmetrical"===yAxisType&&(spec.layer.unshift(seperationLine),spec.params.push({name:"yAxisMaxValue",value:Math.ceil(getRelativeValue(maxValue,valueBase))}));var seriesNames=series.map((serie=>title+serie.resource+(serie.metricPrefix?serie.metricPrefix:""))).join(","),unitLabel=unitRange?getUnitLabel(unitRange,maxValue).unitLabel:"percentage"===yAxisType?"%":"";return(0,jsx_runtime.jsxs)(LineTemporalChartWrapper,{children:[(0,jsx_runtime.jsxs)(ChartHeader,{children:[unitLabel?(0,jsx_runtime.jsxs)(Text_component.uO,{children:[title," (",unitLabel,")"]}):(0,jsx_runtime.jsx)(Text_component.uO,{children:title}),helpText&&(0,jsx_runtime.jsx)(Tooltip_component.m_,{placement:"bottom-right",overlay:(0,jsx_runtime.jsx)(Text_component.GE,{style:{minWidth:"15rem",display:"block"},children:helpText}),children:(0,jsx_runtime.jsx)(Icon_component.In,{name:"Info",color:theme.buttonSecondary})}),isLoading&&(0,jsx_runtime.jsx)(Loader_component.a,{style:{paddingLeft:"".concat(spacing.YK.r4)}})]}),(0,jsx_runtime.jsx)(VegaChartV2_component.sD,{spec,onHover:datum=>{_onHover&&_onHover(LineTemporalChart_component_objectSpread(LineTemporalChart_component_objectSpread({},datum),{},{metadata:{unitLabel,valueBase},originalData:LineTemporalChart_component_objectSpread(LineTemporalChart_component_objectSpread({},relativeDatumToOriginalDatum(datum,valueBase)),{},{timestamp:datum.timestamp})}))},theme:"custom",ref:vegaViewRef,formatTooltip:(0,react.useMemo)((()=>(0,tooltip.Fl)(series,customizedColorRange,colorRange,unitLabel,yAxisType,renderTooltipSerie)),[unitLabel,seriesNames,renderTooltipSerie])},seriesNames),!isLegendHidden&&(0,jsx_runtime.jsx)(Legends,{children:legendLabels.map(((_ref2,index)=>{var{legend,serie,serieIndex}=_ref2;return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(LegendStroke,{lineColor:customizedColorRange.length?customizedColorRange[serieIndex]:colorRange[serieIndex],isLineDashed:serie.isLineDashed}),(0,jsx_runtime.jsx)(Text_component.GE,{children:legend})]},"".concat(title,"-").concat(legend,"-").concat(index))}))})]})}LineTemporalChart.displayName="LineTemporalChart";try{LineTemporalChart.displayName="LineTemporalChart",LineTemporalChart.__docgenInfo={description:"",displayName:"LineTemporalChart",props:{series:{defaultValue:null,description:"",name:"series",required:!0,type:{name:"Serie[]"}},title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}},height:{defaultValue:null,description:"",name:"height",required:!0,type:{name:"number"}},startingTimeStamp:{defaultValue:null,description:"",name:"startingTimeStamp",required:!0,type:{name:"number"}},unitRange:{defaultValue:null,description:"",name:"unitRange",required:!1,type:{name:"{ threshold: number; label: string; }[]"}},isLoading:{defaultValue:{value:"false"},description:"",name:"isLoading",required:!1,type:{name:"boolean"}},isLegendHidden:{defaultValue:{value:"false"},description:"",name:"isLegendHidden",required:!1,type:{name:"boolean"}},yAxisType:{defaultValue:{value:"default"},description:"",name:"yAxisType",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"symmetrical"'},{value:'"percentage"'}]}},yAxisTitle:{defaultValue:null,description:"",name:"yAxisTitle",required:!1,type:{name:"string"}},helpText:{defaultValue:null,description:"",name:"helpText",required:!1,type:{name:"string | Element"}},onHover:{defaultValue:null,description:"",name:"onHover",required:!1,type:{name:"((dataPoint: any) => void)"}},renderTooltipSerie:{defaultValue:null,description:"",name:"renderTooltipSerie",required:!1,type:{name:"((arg0: { color?: string; isLineDashed?: boolean; name: string; value: string; key: string; unitLabel: string; }, tooltipData: any) => string) | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/lib/components/linetemporalchart/LineTemporalChart.component.tsx#LineTemporalChart"]={docgenInfo:LineTemporalChart.__docgenInfo,name:"LineTemporalChart",path:"src/lib/components/linetemporalchart/LineTemporalChart.component.tsx#LineTemporalChart"})}catch(__react_docgen_typescript_loader_error){}var common=__webpack_require__("./stories/common.tsx"),linechart=__webpack_require__("./stories/data/linechart.ts");function linecharttemporal_stories_ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function linecharttemporal_stories_defineProperty(obj,key,value){return(key=function linecharttemporal_stories_toPropertyKey(t){var i=function linecharttemporal_stories_toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:String(i)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}const linecharttemporal_stories={parameters:{storySource:{source:"import React, { useCallback, useState, useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { SyncedCursorCharts } from '../src/lib/components/vegachartv2/SyncedCursorCharts';\nimport {\n  LineTemporalChart,\n  YAXIS_TITLE_READ_WRITE,\n} from '../src/lib/components/linetemporalchart/LineTemporalChart.component';\nimport { MetricsTimeSpanProvider } from '../src/lib/components/linetemporalchart/MetricTimespanProvider';\nimport { Wrapper } from './common';\nimport { dataLineChartV2, dataLineChartV2_readwrite } from './data/linechart';\nimport { defaultRenderTooltipSerie } from '../src/lib/components/linetemporalchart/tooltip';\nexport default {\n  title: 'Components/Data Display/Charts/LineTemporalChart',\n  component: LineTemporalChart,\n  decorators: [\n    (story) => (\n      <Wrapper>\n        <BrowserRouter>\n          <MetricsTimeSpanProvider>\n            <SyncedCursorCharts>{story()}</SyncedCursorCharts>\n          </MetricsTimeSpanProvider>\n        </BrowserRouter>\n      </Wrapper>\n    ),\n  ],\n  args: {\n    heigth: 300,\n    startingTimeStamp: 1629306229,\n  },\n};\n\nexport const CPUUsage = {\n  render: (args) => {\n    const [tooltipText, setTooltipText] = useState('initial text');\n    useEffect(() => {\n      setInterval(() => {\n        setTooltipText('New text ' + new Date().toISOString());\n      }, 500);\n    }, []);\n    return (\n      <LineTemporalChart\n        renderTooltipSerie={useCallback(\n          (serie, tooltipData) => {\n            if (serie.key === 'bootstrap') {\n              return (\n                defaultRenderTooltipSerie(serie) +\n                `<tr><td colspan=\"3\">${tooltipText}</td></tr>`\n              );\n            }\n            return defaultRenderTooltipSerie(serie);\n          },\n          [tooltipText],\n        )}\n        {...args}\n      />\n    );\n  },\n  args: {\n    title: 'CPU Usage',\n    yAxisType: 'default',\n    series: dataLineChartV2,\n    helpText: (\n      <>\n        This charts represents lorem ipsum\n        <br />\n        This charts represents lorem ipsum\n        <br />\n        This charts represents lorem ipsum\n        <br />\n        This charts represents lorem ipsum\n        <br />\n        This charts represents lorem ipsum\n        <br />\n        This charts represents lorem ipsum\n        <br />\n      </>\n    ),\n  },\n};\n\nexport const IOPS = {\n  args: {\n    title: 'IOPS',\n    series: dataLineChartV2_readwrite,\n    yAxisTitle: YAXIS_TITLE_READ_WRITE,\n    yAxisType: 'symmetrical',\n  },\n};\n",locationsMap:{"cpu-usage":{startLoc:{col:24,line:32},endLoc:{col:1,line:79},startBody:{col:24,line:32},endBody:{col:1,line:79}},iops:{startLoc:{col:20,line:81},endLoc:{col:1,line:88},startBody:{col:20,line:81},endBody:{col:1,line:88}}}}},title:"Components/Data Display/Charts/LineTemporalChart",component:LineTemporalChart,decorators:[story=>(0,jsx_runtime.jsx)(common.mO,{children:(0,jsx_runtime.jsx)(react_router_dom.Kd,{children:(0,jsx_runtime.jsx)(MetricsTimeSpanProvider,{children:(0,jsx_runtime.jsx)(SyncedCursorCharts.IF,{children:story()})})})})],args:{heigth:300,startingTimeStamp:1629306229}};var CPUUsage={render:args=>{var[tooltipText,setTooltipText]=(0,react.useState)("initial text");return(0,react.useEffect)((()=>{setInterval((()=>{setTooltipText("New text "+(new Date).toISOString())}),500)}),[]),(0,jsx_runtime.jsx)(LineTemporalChart,function linecharttemporal_stories_objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?linecharttemporal_stories_ownKeys(Object(t),!0).forEach((function(r){linecharttemporal_stories_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):linecharttemporal_stories_ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}({renderTooltipSerie:(0,react.useCallback)(((serie,tooltipData)=>"bootstrap"===serie.key?(0,tooltip.LS)(serie)+'<tr><td colspan="3">'.concat(tooltipText,"</td></tr>"):(0,tooltip.LS)(serie)),[tooltipText])},args))},args:{title:"CPU Usage",yAxisType:"default",series:linechart.vp,helpText:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:["This charts represents lorem ipsum",(0,jsx_runtime.jsx)("br",{}),"This charts represents lorem ipsum",(0,jsx_runtime.jsx)("br",{}),"This charts represents lorem ipsum",(0,jsx_runtime.jsx)("br",{}),"This charts represents lorem ipsum",(0,jsx_runtime.jsx)("br",{}),"This charts represents lorem ipsum",(0,jsx_runtime.jsx)("br",{}),"This charts represents lorem ipsum",(0,jsx_runtime.jsx)("br",{})]})}},IOPS={args:{title:"IOPS",series:linechart.pg,yAxisTitle:"write(+) / read(-)",yAxisType:"symmetrical"}};CPUUsage.parameters={...CPUUsage.parameters,docs:{...CPUUsage.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    const [tooltipText, setTooltipText] = useState('initial text');\n    useEffect(() => {\n      setInterval(() => {\n        setTooltipText('New text ' + new Date().toISOString());\n      }, 500);\n    }, []);\n    return <LineTemporalChart renderTooltipSerie={useCallback((serie, tooltipData) => {\n      if (serie.key === 'bootstrap') {\n        return defaultRenderTooltipSerie(serie) + `<tr><td colspan=\"3\">${tooltipText}</td></tr>`;\n      }\n      return defaultRenderTooltipSerie(serie);\n    }, [tooltipText])} {...args} />;\n  },\n  args: {\n    title: 'CPU Usage',\n    yAxisType: 'default',\n    series: dataLineChartV2,\n    helpText: <>\n        This charts represents lorem ipsum\n        <br />\n        This charts represents lorem ipsum\n        <br />\n        This charts represents lorem ipsum\n        <br />\n        This charts represents lorem ipsum\n        <br />\n        This charts represents lorem ipsum\n        <br />\n        This charts represents lorem ipsum\n        <br />\n      </>\n  }\n}",...CPUUsage.parameters?.docs?.source}}},IOPS.parameters={...IOPS.parameters,docs:{...IOPS.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'IOPS',\n    series: dataLineChartV2_readwrite,\n    yAxisTitle: YAXIS_TITLE_READ_WRITE,\n    yAxisType: 'symmetrical'\n  }\n}",...IOPS.parameters?.docs?.source}}};const __namedExportsOrder=["CPUUsage","IOPS"]}}]);