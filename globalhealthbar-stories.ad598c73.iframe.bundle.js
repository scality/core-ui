"use strict";(self.webpackChunk_scality_core_ui=self.webpackChunk_scality_core_ui||[]).push([[18047],{"./stories/globalhealthbar.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AlertTriggeredEarlierThanTheStartingTime:()=>AlertTriggeredEarlierThanTheStartingTime,FirstLabel:()=>FirstLabel,GlobalHealthComponentDemo:()=>GlobalHealthComponentDemo,GlobalHealthEmpty:()=>GlobalHealthEmpty,GlobalHealthLast24Hours:()=>GlobalHealthLast24Hours,__namedExportsOrder:()=>__namedExportsOrder,default:()=>globalhealthbar_stories});var react=__webpack_require__("./node_modules/react/index.js"),VegaChartV2_component=__webpack_require__("./src/lib/components/vegachartv2/VegaChartV2.component.tsx"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),src=__webpack_require__("./node_modules/vega-lite/build/src/index.js"),vega_util_module=__webpack_require__("./node_modules/vega-util/build/vega-util.module.js"),_excluded=["title","image"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:String(i)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var TOP="top";function GlobalHealthBar(_ref){var{id,alerts,start,end,height=8,tooltipPosition=TOP}=_ref,theme=(0,styled_components_browser_esm.DP)(),trimAlerts=alerts.map((alert=>new Date(alert.startsAt)<new Date(start)?_objectSpread(_objectSpread({},alert),{},{startsAt:start}):_objectSpread({},alert)));trimAlerts.unshift({startsAt:start,endsAt:end,severity:"healthy"});var spec={width:"container",height,data:{values:trimAlerts},transform:[{calculate:"datum.description !== '' ? 'View details on alert page' : ''",as:"title"}],view:{cornerRadius:6},config:{style:{cell:{stroke:"transparent",strokeWidth:0}}},layer:[{mark:{type:"rect",clip:!0},encoding:{color:{value:theme.statusHealthy}}},{mark:{type:"rect",cursor:"pointer",clip:!0},encoding:{x:{field:"startsAt",type:"temporal",title:null,stack:null,axis:{format:"%d%b %H:%M:%S",ticks:!0,tickCount:5,labelFlush:20,labelColor:theme.textSecondary}},x2:{field:"endsAt"},color:{value:theme.statusHealthy}}},{mark:{type:"rect",tooltip:!0,cursor:"pointer",clip:!0},params:[{name:"highlight",select:{type:"point",on:"mouseover",clear:"mouseout"}}],encoding:{x:{timeUnit:"yearmonthdatehoursminutes",field:"startsAt",type:"temporal",title:null},x2:{field:"endsAt"},color:{field:"severity",type:"nominal",title:"null",scale:{domain:["healthy","critical","unavailable","warning"],range:[theme.statusHealthy,theme.statusCritical,theme.textSecondary,theme.statusWarning]},legend:null},tooltip:[{field:"severity",title:"Severity"},{field:"startsAt",title:"Start",type:"temporal",timeUnit:"yearmonthdatehoursminutes"},{field:"endsAt",title:"End",type:"temporal",timeUnit:"yearmonthdatehoursminutes"},{field:"title",title:"title"},{field:"description",title:"Description"}],opacity:{condition:{param:"highlight",value:1},value:.6}}}]};return(0,jsx_runtime.jsx)(VegaChartV2_component.sD,{className:"sc-globalhealthbar",spec,theme:"custom",tooltipPosition,formatTooltip:(0,react.useMemo)((()=>function formatValue(){return(value,valueToHtml,maxDepth)=>{if((0,vega_util_module.cy)(value))return"[".concat(value.map((v=>valueToHtml((0,vega_util_module.Kg)(v)?v:(0,src.stringify)(v,maxDepth)))).join(", "),"]");if((0,vega_util_module.Gv)(value)){var content="",{title,image}=value,rest=_objectWithoutProperties(value,_excluded);title&&(content+='<h2 style="text-align: center;">'.concat(valueToHtml(title),"</h2>")),image&&(content+='<img src="'.concat(valueToHtml(image),'">'));var keys=Object.keys(rest);if(keys.length>0){for(var key of(content+="<table>",keys)){var val=rest[key];void 0!==val&&((0,vega_util_module.Gv)(val)&&(val=(0,src.stringify)(val,maxDepth)),val&&"undefined"!==val&&"null"!==val&&(content+='<tr>\n              <td class="key" style="text-align: left;">\n                  '.concat(valueToHtml(key),':\n              </td>\n              <td class="value" style="text-align: right;">\n                  ').concat(valueToHtml(val),"\n              </td>\n            </tr>")))}content+="</table>"}return content||"{}"}return valueToHtml(value)}}()),[])})}GlobalHealthBar.displayName="GlobalHealthBar";try{GlobalHealthBar.displayName="GlobalHealthBar",GlobalHealthBar.__docgenInfo={description:"",displayName:"GlobalHealthBar",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},alerts:{defaultValue:null,description:"",name:"alerts",required:!0,type:{name:"{ description: string; startsAt: string; endsAt: string; severity: string; }[]"}},start:{defaultValue:null,description:"",name:"start",required:!0,type:{name:"string"}},end:{defaultValue:null,description:"",name:"end",required:!0,type:{name:"string"}},height:{defaultValue:{value:"8"},description:"",name:"height",required:!1,type:{name:"number"}},tooltipPosition:{defaultValue:{value:"top"},description:"",name:"tooltipPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/lib/components/globalhealthbar/GlobalHealthBar.component.tsx#GlobalHealthBar"]={docgenInfo:GlobalHealthBar.__docgenInfo,name:"GlobalHealthBar",path:"src/lib/components/globalhealthbar/GlobalHealthBar.component.tsx#GlobalHealthBar"})}catch(__react_docgen_typescript_loader_error){}var SyncedCursorCharts=__webpack_require__("./src/lib/components/vegachartv2/SyncedCursorCharts.tsx"),common=__webpack_require__("./stories/common.tsx");const globalhealthbar_stories={parameters:{storySource:{source:"import React from 'react';\nimport { GlobalHealthBar } from '../src/lib/components/globalhealthbar/GlobalHealthBar.component';\nimport { SyncedCursorCharts } from '../src/lib/components/vegachartv2/SyncedCursorCharts';\nimport { Wrapper } from './common';\nconst alerts = [\n  {\n    id: '1',\n    severity: 'warning',\n    startsAt: '2021-02-01T07:00:00Z',\n    endsAt: '2021-02-01T21:00:00Z',\n    description: 'Global health warning',\n  },\n  {\n    id: '2',\n    severity: 'warning',\n    startsAt: '2021-02-01T23:00:00Z',\n    endsAt: '2021-02-02T23:00:00Z',\n    description: 'Global health warning',\n  },\n  {\n    id: '3',\n    severity: 'critical',\n    startsAt: '2021-02-03T00:00:00Z',\n    endsAt: '2021-02-04T00:00:00Z',\n    description: 'Global health critical',\n  },\n  {\n    id: '4',\n    severity: 'warning',\n    startsAt: '2021-02-04T10:00:00Z',\n    endsAt: '2021-02-06T00:00:00Z',\n    description: 'Global health warning',\n  },\n  {\n    id: '5',\n    severity: 'warning',\n    startsAt: '2021-02-06T12:00:00Z',\n    endsAt: '2021-02-06T20:00:00Z',\n    description: 'Global health warning',\n  },\n];\nconst alertsLast24h = [\n  {\n    id: '1',\n    severity: 'warning',\n    startsAt: '2021-02-01T07:00:00Z',\n    endsAt: '2021-02-01T08:00:00Z',\n    description: 'Global health warning',\n  },\n  {\n    id: '5',\n    severity: 'warning',\n    startsAt: '2021-02-01T10:00:00Z',\n    endsAt: '2021-02-01T20:00:00Z',\n    description: 'Global health warning',\n  },\n  {\n    id: '6',\n    severity: 'unavailable',\n    startsAt: '2021-02-01T02:00:00Z',\n    endsAt: '2021-02-01T03:00:00Z',\n    description: 'unavailable',\n  },\n];\nconst emptyAlert = [];\nconst alertRetrieveBefore = [\n  {\n    id: '1',\n    severity: 'warning',\n    startsAt: '2021-01-31T23:00:00Z',\n    endsAt: '2021-02-03T21:00:00Z',\n    description: 'Global health warning',\n  },\n  {\n    id: '2',\n    severity: 'critical',\n    startsAt: '2021-02-05T23:00:00Z',\n    endsAt: '2021-02-06T21:00:00Z',\n    description: 'Global health warning',\n  },\n];\nconst alertTriggerNotFirstDay = [\n  {\n    id: '1',\n    severity: 'warning',\n    startsAt: '2021-02-24T21:00:00Z',\n    endsAt: '2021-02-25T21:00:00Z',\n    description: 'Global health warning',\n  },\n  {\n    id: '2',\n    severity: 'critical',\n    startsAt: '2021-02-26T23:00:00Z',\n    endsAt: '2021-02-27T21:00:00Z',\n    description: 'Global health warning',\n  },\n];\n\nconst start = '2021-01-31T23:00:00Z'; // UTC time\nconst end = '2021-02-06T23:00:00Z';\nconst startLast24h = '2021-02-01T00:00:00Z';\nconst endLast24h = '2021-02-02T00:00:00Z';\nconst startNotFirstDay = '2021-02-23T23:00:00Z';\nconst endNotFirstDay = '2021-03-01T23:00:00Z';\n\nexport default {\n  title: 'Components/Data Display/Charts/GlobalHealthBar',\n  component: GlobalHealthBar,\n  decorators: [\n    (story) => (\n      <Wrapper\n        style={{ minHeight: '50vh', display: 'flex', alignItems: 'center' }}\n      >\n        <div style={{ width: '500px' }}>\n          <SyncedCursorCharts>{story()}</SyncedCursorCharts>\n        </div>\n      </Wrapper>\n    ),\n  ],\n  args: {\n    start,\n    end,\n  },\n  argTypes: {\n    start: {\n      control: 'date',\n    },\n    end: {\n      control: 'date',\n    },\n  },\n};\n\nexport const GlobalHealthComponentDemo = {\n  args: {\n    id: 'vis_globalhealth',\n    alerts,\n  },\n};\n\nexport const GlobalHealthLast24Hours = {\n  args: {\n    id: 'vis_globalhealth_24h',\n    alerts: alertsLast24h,\n    start: startLast24h,\n    end: endLast24h,\n  },\n};\nexport const GlobalHealthEmpty = {\n  args: {\n    id: 'vis_globalhealth_empty',\n    alerts: emptyAlert,\n  },\n};\n\nexport const AlertTriggeredEarlierThanTheStartingTime = {\n  args: {\n    id: 'vis_globalhealth_alert_retrieve_before',\n    alerts: alertRetrieveBefore,\n  },\n};\n\nexport const FirstLabel = {\n  name: 'First Label always includes the month label',\n  args: {\n    id: 'vis_globalhealth_display_month_1st_label',\n    alerts: alertTriggerNotFirstDay,\n    start: startNotFirstDay,\n    end: endNotFirstDay,\n  },\n};\n",locationsMap:{"global-health-component-demo":{startLoc:{col:41,line:134},endLoc:{col:1,line:139},startBody:{col:41,line:134},endBody:{col:1,line:139}},"global-health-last-24-hours":{startLoc:{col:39,line:141},endLoc:{col:1,line:148},startBody:{col:39,line:141},endBody:{col:1,line:148}},"global-health-empty":{startLoc:{col:33,line:149},endLoc:{col:1,line:154},startBody:{col:33,line:149},endBody:{col:1,line:154}},"alert-triggered-earlier-than-the-starting-time":{startLoc:{col:56,line:156},endLoc:{col:1,line:161},startBody:{col:56,line:156},endBody:{col:1,line:161}},"first-label":{startLoc:{col:26,line:163},endLoc:{col:1,line:171},startBody:{col:26,line:163},endBody:{col:1,line:171}}}}},title:"Components/Data Display/Charts/GlobalHealthBar",component:GlobalHealthBar,decorators:[story=>(0,jsx_runtime.jsx)(common.mO,{style:{minHeight:"50vh",display:"flex",alignItems:"center"},children:(0,jsx_runtime.jsx)("div",{style:{width:"500px"},children:(0,jsx_runtime.jsx)(SyncedCursorCharts.IF,{children:story()})})})],args:{start:"2021-01-31T23:00:00Z",end:"2021-02-06T23:00:00Z"},argTypes:{start:{control:"date"},end:{control:"date"}}};var GlobalHealthComponentDemo={args:{id:"vis_globalhealth",alerts:[{id:"1",severity:"warning",startsAt:"2021-02-01T07:00:00Z",endsAt:"2021-02-01T21:00:00Z",description:"Global health warning"},{id:"2",severity:"warning",startsAt:"2021-02-01T23:00:00Z",endsAt:"2021-02-02T23:00:00Z",description:"Global health warning"},{id:"3",severity:"critical",startsAt:"2021-02-03T00:00:00Z",endsAt:"2021-02-04T00:00:00Z",description:"Global health critical"},{id:"4",severity:"warning",startsAt:"2021-02-04T10:00:00Z",endsAt:"2021-02-06T00:00:00Z",description:"Global health warning"},{id:"5",severity:"warning",startsAt:"2021-02-06T12:00:00Z",endsAt:"2021-02-06T20:00:00Z",description:"Global health warning"}]}},GlobalHealthLast24Hours={args:{id:"vis_globalhealth_24h",alerts:[{id:"1",severity:"warning",startsAt:"2021-02-01T07:00:00Z",endsAt:"2021-02-01T08:00:00Z",description:"Global health warning"},{id:"5",severity:"warning",startsAt:"2021-02-01T10:00:00Z",endsAt:"2021-02-01T20:00:00Z",description:"Global health warning"},{id:"6",severity:"unavailable",startsAt:"2021-02-01T02:00:00Z",endsAt:"2021-02-01T03:00:00Z",description:"unavailable"}],start:"2021-02-01T00:00:00Z",end:"2021-02-02T00:00:00Z"}},GlobalHealthEmpty={args:{id:"vis_globalhealth_empty",alerts:[]}},AlertTriggeredEarlierThanTheStartingTime={args:{id:"vis_globalhealth_alert_retrieve_before",alerts:[{id:"1",severity:"warning",startsAt:"2021-01-31T23:00:00Z",endsAt:"2021-02-03T21:00:00Z",description:"Global health warning"},{id:"2",severity:"critical",startsAt:"2021-02-05T23:00:00Z",endsAt:"2021-02-06T21:00:00Z",description:"Global health warning"}]}},FirstLabel={name:"First Label always includes the month label",args:{id:"vis_globalhealth_display_month_1st_label",alerts:[{id:"1",severity:"warning",startsAt:"2021-02-24T21:00:00Z",endsAt:"2021-02-25T21:00:00Z",description:"Global health warning"},{id:"2",severity:"critical",startsAt:"2021-02-26T23:00:00Z",endsAt:"2021-02-27T21:00:00Z",description:"Global health warning"}],start:"2021-02-23T23:00:00Z",end:"2021-03-01T23:00:00Z"}};GlobalHealthComponentDemo.parameters={...GlobalHealthComponentDemo.parameters,docs:{...GlobalHealthComponentDemo.parameters?.docs,source:{originalSource:"{\n  args: {\n    id: 'vis_globalhealth',\n    alerts\n  }\n}",...GlobalHealthComponentDemo.parameters?.docs?.source}}},GlobalHealthLast24Hours.parameters={...GlobalHealthLast24Hours.parameters,docs:{...GlobalHealthLast24Hours.parameters?.docs,source:{originalSource:"{\n  args: {\n    id: 'vis_globalhealth_24h',\n    alerts: alertsLast24h,\n    start: startLast24h,\n    end: endLast24h\n  }\n}",...GlobalHealthLast24Hours.parameters?.docs?.source}}},GlobalHealthEmpty.parameters={...GlobalHealthEmpty.parameters,docs:{...GlobalHealthEmpty.parameters?.docs,source:{originalSource:"{\n  args: {\n    id: 'vis_globalhealth_empty',\n    alerts: emptyAlert\n  }\n}",...GlobalHealthEmpty.parameters?.docs?.source}}},AlertTriggeredEarlierThanTheStartingTime.parameters={...AlertTriggeredEarlierThanTheStartingTime.parameters,docs:{...AlertTriggeredEarlierThanTheStartingTime.parameters?.docs,source:{originalSource:"{\n  args: {\n    id: 'vis_globalhealth_alert_retrieve_before',\n    alerts: alertRetrieveBefore\n  }\n}",...AlertTriggeredEarlierThanTheStartingTime.parameters?.docs?.source}}},FirstLabel.parameters={...FirstLabel.parameters,docs:{...FirstLabel.parameters?.docs,source:{originalSource:"{\n  name: 'First Label always includes the month label',\n  args: {\n    id: 'vis_globalhealth_display_month_1st_label',\n    alerts: alertTriggerNotFirstDay,\n    start: startNotFirstDay,\n    end: endNotFirstDay\n  }\n}",...FirstLabel.parameters?.docs?.source}}};const __namedExportsOrder=["GlobalHealthComponentDemo","GlobalHealthLast24Hours","GlobalHealthEmpty","AlertTriggeredEarlierThanTheStartingTime","FirstLabel"]}}]);