"use strict";(self.webpackChunk_scality_core_ui=self.webpackChunk_scality_core_ui||[]).push([[55449],{"./stories/progressbar.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Default:()=>Default,DiffrentColors:()=>DiffrentColors,Scale:()=>Scale,WithAnimation:()=>WithAnimation,WithInfos:()=>WithInfos,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _src_lib_components_progressbar_ProgressBar_component__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/lib/components/progressbar/ProgressBar.component.tsx"),_common__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./stories/common.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:String(i)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}const __WEBPACK_DEFAULT_EXPORT__={parameters:{storySource:{source:'import React from \'react\';\nimport { ProgressBar } from \'../src/lib/components/progressbar/ProgressBar.component\';\nimport { Wrapper, Title } from \'./common\';\nexport default {\n  title: \'Components/Progress & loading/ProgressBar\',\n  component: ProgressBar,\n  decorators: [(story) => <div style={{ width: \'260px\' }}>{story()}</div>],\n  args: {\n    percentage: 50,\n    buildinLabel: \'50%\',\n    backgroundColor: \'#87929D\',\n  },\n  argTypes: {\n    color: {\n      control: {\n        type: \'color\',\n      },\n    },\n    backgroundColor: {\n      control: {\n        type: \'color\',\n      },\n    },\n  },\n};\n\nexport const Basic = {};\n\nconst sizes = [\'smaller\', \'small\', \'base\', \'large\', \'larger\'];\nexport const Scale = {\n  render: (args) => {\n    return sizes.map((size) => {\n      return (\n        <div style={{ padding: \'2rem\' }}>\n          <ProgressBar size={size} topLeftLabel={size} {...args} />\n        </div>\n      );\n    });\n  },\n};\n\nexport const WithInfos = {\n  args: {\n    topLeftLabel: \'Usage\',\n    topRightLabel: \'50%\',\n    bottomLeftLabel: \'5.17TB STORED - 13TB USED\',\n    bottomRightLabel: \'12.9TB FREE - 25.83TB TOTAL\',\n  },\n};\n\nexport const WithAnimation = {\n  args: {\n    isAnimation: true,\n  },\n};\n\nexport const DiffrentColors = {\n  render: (args) => (\n    <div\n      style={{\n        display: \'flex\',\n        flexDirection: \'column\',\n        height: \'10rem\',\n        justifyContent: \'space-between\',\n      }}\n    >\n      <ProgressBar color="#2f67ac" {...args} />\n      <ProgressBar\n        color="#ff5722"\n        {...args}\n        percentage={70}\n        buildinLabel="70%"\n      />\n      <ProgressBar\n        color="#982803"\n        {...args}\n        percentage={90}\n        buildinLabel="90%"\n      />\n    </div>\n  ),\n};\n\nexport const Default = {\n  render: ({}) => {\n    return (\n      <Wrapper>\n        <div\n          style={{\n            width: \'260px\',\n          }}\n        >\n          <Title>Smaller</Title>\n          <ProgressBar\n            size="smaller"\n            percentage={50}\n            topLeftLabel="50%"\n            topRightLabel="100GB Total"\n            bottomLeftLabel="50GB Used"\n            bottomRightLabel="50GB Free"\n            buildinLabel="50%"\n            backgroundColor="#87929D"\n          />\n\n          <Title>Base</Title>\n          <ProgressBar\n            size="base"\n            percentage={50}\n            topLeftLabel="Usage"\n            topRightLabel="50%"\n            bottomLeftLabel="5.17TB STORED - 13TB USED"\n            bottomRightLabel="12.9TB FREE - 25.83TB TOTAL"\n            buildinLabel="50%"\n          />\n\n          <Title>Large with animation</Title>\n          <ProgressBar\n            size="large"\n            percentage={50}\n            topLeftLabel="50%"\n            topRightLabel="100GB Total"\n            bottomLeftLabel="50GB Used"\n            bottomRightLabel="50GB Free"\n            buildinLabel="50%"\n            backgroundColor="#87929D"\n            isAnimation={true}\n          />\n\n          <Title>Larger</Title>\n          <ProgressBar\n            size="larger"\n            percentage={50}\n            topLeftLabel="50%"\n            topRightLabel="100GB Total"\n            bottomLeftLabel="50GB Used"\n            bottomRightLabel="50GB Free"\n            buildinLabel="50%"\n            backgroundColor="#87929D"\n          />\n\n          <Title>Different colors</Title>\n          <ProgressBar\n            size="smaller"\n            color="#2f67ac"\n            percentage={50}\n            topLeftLabel="50%"\n            topRightLabel="100GB Total"\n            bottomLeftLabel="50GB Used"\n            bottomRightLabel="50GB Free"\n            buildinLabel="50%"\n            backgroundColor="#87929D"\n          />\n          <ProgressBar\n            size="smaller"\n            color="#ff5722"\n            percentage={10}\n            topLeftLabel="10%"\n            buildinLabel="10%"\n            backgroundColor="#87929D"\n          />\n          <ProgressBar\n            size="smaller"\n            color="#982803"\n            percentage={90}\n            topLeftLabel="90% Used"\n            topRightLabel="100GB Total"\n            buildinLabel="90%"\n            backgroundColor="#87929D"\n          />\n        </div>\n      </Wrapper>\n    );\n  },\n};\n',locationsMap:{basic:{startLoc:{col:21,line:27},endLoc:{col:23,line:27},startBody:{col:21,line:27},endBody:{col:23,line:27}},scale:{startLoc:{col:21,line:30},endLoc:{col:1,line:40},startBody:{col:21,line:30},endBody:{col:1,line:40}},"with-infos":{startLoc:{col:25,line:42},endLoc:{col:1,line:49},startBody:{col:25,line:42},endBody:{col:1,line:49}},"with-animation":{startLoc:{col:29,line:51},endLoc:{col:1,line:55},startBody:{col:29,line:51},endBody:{col:1,line:55}},"diffrent-colors":{startLoc:{col:30,line:57},endLoc:{col:1,line:82},startBody:{col:30,line:57},endBody:{col:1,line:82}},default:{startLoc:{col:23,line:84},endLoc:{col:1,line:174},startBody:{col:23,line:84},endBody:{col:1,line:174}}}}},title:"Components/Progress & loading/ProgressBar",component:_src_lib_components_progressbar_ProgressBar_component__WEBPACK_IMPORTED_MODULE_2__.z,decorators:[story=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{style:{width:"260px"},children:story()})],args:{percentage:50,buildinLabel:"50%",backgroundColor:"#87929D"},argTypes:{color:{control:{type:"color"}},backgroundColor:{control:{type:"color"}}}};var Basic={},sizes=["smaller","small","base","large","larger"],Scale={render:args=>sizes.map((size=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{style:{padding:"2rem"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_lib_components_progressbar_ProgressBar_component__WEBPACK_IMPORTED_MODULE_2__.z,_objectSpread({size,topLeftLabel:size},args))})))},WithInfos={args:{topLeftLabel:"Usage",topRightLabel:"50%",bottomLeftLabel:"5.17TB STORED - 13TB USED",bottomRightLabel:"12.9TB FREE - 25.83TB TOTAL"}},WithAnimation={args:{isAnimation:!0}},DiffrentColors={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{style:{display:"flex",flexDirection:"column",height:"10rem",justifyContent:"space-between"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_lib_components_progressbar_ProgressBar_component__WEBPACK_IMPORTED_MODULE_2__.z,_objectSpread({color:"#2f67ac"},args)),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_lib_components_progressbar_ProgressBar_component__WEBPACK_IMPORTED_MODULE_2__.z,_objectSpread(_objectSpread({color:"#ff5722"},args),{},{percentage:70,buildinLabel:"70%"})),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_lib_components_progressbar_ProgressBar_component__WEBPACK_IMPORTED_MODULE_2__.z,_objectSpread(_objectSpread({color:"#982803"},args),{},{percentage:90,buildinLabel:"90%"}))]})},Default={render:_ref=>{var{}=_ref;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_common__WEBPACK_IMPORTED_MODULE_3__.mO,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{style:{width:"260px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_common__WEBPACK_IMPORTED_MODULE_3__.hE,{children:"Smaller"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_lib_components_progressbar_ProgressBar_component__WEBPACK_IMPORTED_MODULE_2__.z,{size:"smaller",percentage:50,topLeftLabel:"50%",topRightLabel:"100GB Total",bottomLeftLabel:"50GB Used",bottomRightLabel:"50GB Free",buildinLabel:"50%",backgroundColor:"#87929D"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_common__WEBPACK_IMPORTED_MODULE_3__.hE,{children:"Base"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_lib_components_progressbar_ProgressBar_component__WEBPACK_IMPORTED_MODULE_2__.z,{size:"base",percentage:50,topLeftLabel:"Usage",topRightLabel:"50%",bottomLeftLabel:"5.17TB STORED - 13TB USED",bottomRightLabel:"12.9TB FREE - 25.83TB TOTAL",buildinLabel:"50%"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_common__WEBPACK_IMPORTED_MODULE_3__.hE,{children:"Large with animation"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_lib_components_progressbar_ProgressBar_component__WEBPACK_IMPORTED_MODULE_2__.z,{size:"large",percentage:50,topLeftLabel:"50%",topRightLabel:"100GB Total",bottomLeftLabel:"50GB Used",bottomRightLabel:"50GB Free",buildinLabel:"50%",backgroundColor:"#87929D",isAnimation:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_common__WEBPACK_IMPORTED_MODULE_3__.hE,{children:"Larger"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_lib_components_progressbar_ProgressBar_component__WEBPACK_IMPORTED_MODULE_2__.z,{size:"larger",percentage:50,topLeftLabel:"50%",topRightLabel:"100GB Total",bottomLeftLabel:"50GB Used",bottomRightLabel:"50GB Free",buildinLabel:"50%",backgroundColor:"#87929D"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_common__WEBPACK_IMPORTED_MODULE_3__.hE,{children:"Different colors"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_lib_components_progressbar_ProgressBar_component__WEBPACK_IMPORTED_MODULE_2__.z,{size:"smaller",color:"#2f67ac",percentage:50,topLeftLabel:"50%",topRightLabel:"100GB Total",bottomLeftLabel:"50GB Used",bottomRightLabel:"50GB Free",buildinLabel:"50%",backgroundColor:"#87929D"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_lib_components_progressbar_ProgressBar_component__WEBPACK_IMPORTED_MODULE_2__.z,{size:"smaller",color:"#ff5722",percentage:10,topLeftLabel:"10%",buildinLabel:"10%",backgroundColor:"#87929D"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_lib_components_progressbar_ProgressBar_component__WEBPACK_IMPORTED_MODULE_2__.z,{size:"smaller",color:"#982803",percentage:90,topLeftLabel:"90% Used",topRightLabel:"100GB Total",buildinLabel:"90%",backgroundColor:"#87929D"})]})})}};Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{}",...Basic.parameters?.docs?.source}}},Scale.parameters={...Scale.parameters,docs:{...Scale.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    return sizes.map(size => {\n      return <div style={{\n        padding: '2rem'\n      }}>\n          <ProgressBar size={size} topLeftLabel={size} {...args} />\n        </div>;\n    });\n  }\n}",...Scale.parameters?.docs?.source}}},WithInfos.parameters={...WithInfos.parameters,docs:{...WithInfos.parameters?.docs,source:{originalSource:"{\n  args: {\n    topLeftLabel: 'Usage',\n    topRightLabel: '50%',\n    bottomLeftLabel: '5.17TB STORED - 13TB USED',\n    bottomRightLabel: '12.9TB FREE - 25.83TB TOTAL'\n  }\n}",...WithInfos.parameters?.docs?.source}}},WithAnimation.parameters={...WithAnimation.parameters,docs:{...WithAnimation.parameters?.docs,source:{originalSource:"{\n  args: {\n    isAnimation: true\n  }\n}",...WithAnimation.parameters?.docs?.source}}},DiffrentColors.parameters={...DiffrentColors.parameters,docs:{...DiffrentColors.parameters?.docs,source:{originalSource:'{\n  render: args => <div style={{\n    display: \'flex\',\n    flexDirection: \'column\',\n    height: \'10rem\',\n    justifyContent: \'space-between\'\n  }}>\n      <ProgressBar color="#2f67ac" {...args} />\n      <ProgressBar color="#ff5722" {...args} percentage={70} buildinLabel="70%" />\n      <ProgressBar color="#982803" {...args} percentage={90} buildinLabel="90%" />\n    </div>\n}',...DiffrentColors.parameters?.docs?.source}}},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: ({}) => {\n    return <Wrapper>\n        <div style={{\n        width: \'260px\'\n      }}>\n          <Title>Smaller</Title>\n          <ProgressBar size="smaller" percentage={50} topLeftLabel="50%" topRightLabel="100GB Total" bottomLeftLabel="50GB Used" bottomRightLabel="50GB Free" buildinLabel="50%" backgroundColor="#87929D" />\n\n          <Title>Base</Title>\n          <ProgressBar size="base" percentage={50} topLeftLabel="Usage" topRightLabel="50%" bottomLeftLabel="5.17TB STORED - 13TB USED" bottomRightLabel="12.9TB FREE - 25.83TB TOTAL" buildinLabel="50%" />\n\n          <Title>Large with animation</Title>\n          <ProgressBar size="large" percentage={50} topLeftLabel="50%" topRightLabel="100GB Total" bottomLeftLabel="50GB Used" bottomRightLabel="50GB Free" buildinLabel="50%" backgroundColor="#87929D" isAnimation={true} />\n\n          <Title>Larger</Title>\n          <ProgressBar size="larger" percentage={50} topLeftLabel="50%" topRightLabel="100GB Total" bottomLeftLabel="50GB Used" bottomRightLabel="50GB Free" buildinLabel="50%" backgroundColor="#87929D" />\n\n          <Title>Different colors</Title>\n          <ProgressBar size="smaller" color="#2f67ac" percentage={50} topLeftLabel="50%" topRightLabel="100GB Total" bottomLeftLabel="50GB Used" bottomRightLabel="50GB Free" buildinLabel="50%" backgroundColor="#87929D" />\n          <ProgressBar size="smaller" color="#ff5722" percentage={10} topLeftLabel="10%" buildinLabel="10%" backgroundColor="#87929D" />\n          <ProgressBar size="smaller" color="#982803" percentage={90} topLeftLabel="90% Used" topRightLabel="100GB Total" buildinLabel="90%" backgroundColor="#87929D" />\n        </div>\n      </Wrapper>;\n  }\n}',...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Basic","Scale","WithInfos","WithAnimation","DiffrentColors","Default"]}}]);