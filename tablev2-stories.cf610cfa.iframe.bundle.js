"use strict";(self.webpackChunk_scality_core_ui=self.webpackChunk_scality_core_ui||[]).push([[42509],{"./stories/tablev2.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{EmptyTable:()=>EmptyTable,ErrorTable:()=>ErrorTable,LoadingTable:()=>LoadingTable,MultiTable:()=>MultiTable,OnBottomCallback:()=>OnBottomCallback,SimpleContentTable:()=>SimpleContentTable,__namedExportsOrder:()=>__namedExportsOrder,asyncTable:()=>asyncTable,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _templateObject,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/lib/components/tablev2/Tablev2.component.tsx"),_common__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./stories/common.tsx"),react_router_dom__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/react-router/esm/react-router.js"),react_router_dom__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/react-router-dom/esm/react-router-dom.js"),_src_lib_next__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/lib/components/box/Box.ts"),_src_lib_next__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./src/lib/components/buttonv2/Buttonv2.component.tsx"),styled_components__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["row"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Flex=(0,styled_components__WEBPACK_IMPORTED_MODULE_3__.Ay)(_src_lib_next__WEBPACK_IMPORTED_MODULE_4__.a)(_templateObject||(_templateObject=function _taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}(["\n  display: flex;\n"])));const __WEBPACK_DEFAULT_EXPORT__={parameters:{storySource:{source:"import React, { useState } from 'react';\nimport { action } from '@storybook/addon-actions';\nimport {\n  Column,\n  EmptyCell,\n  Table,\n} from '../src/lib/components/tablev2/Tablev2.component';\nimport { Title } from './common';\nimport {\n  BrowserRouter,\n  BrowserRouter as Router,\n  useLocation,\n} from 'react-router-dom';\nimport { CellProps, Row } from 'react-table';\nimport { Box, Button } from '../src/lib/next';\nimport styled from 'styled-components';\n\nconst Flex = styled(Box)`\n  display: flex;\n`;\n\nconst info = {\n  title: 'Components/Data Display/Table',\n  component: Table,\n};\n\nexport default info;\n\nconst data: Entry[] = [\n  {\n    id: 1,\n    firstName: 'Sotiria-long-long-long-long-long',\n    lastName: 'Agathangelou',\n    age: undefined,\n    health: 'healthy',\n  },\n  {\n    id: 2,\n    firstName: 'Stefania',\n    lastName: 'Evgenios',\n    age: 27,\n    health: 'warning',\n  },\n  {\n    id: 3,\n    firstName: 'Yohann',\n    lastName: 'Rodolph',\n    age: 27,\n    health: 'critical',\n  },\n  {\n    id: 4,\n    firstName: 'Ninette',\n    lastName: 'Caroline',\n    age: 31,\n    health: 'healthy',\n  },\n];\n\ntype Entry = {\n  id: number;\n  firstName: string;\n  lastName: string;\n  age?: number;\n  health: string;\n};\n\nconst columns: Column<Entry>[] = [\n  {\n    Header: 'First Name',\n    accessor: 'firstName',\n    cellStyle: {\n      width: 'unset',\n      flex: 2,\n      textAlign: 'left',\n    },\n    Cell: ({ value }) => {\n      if (value) return <>{value}</>;\n      return <EmptyCell />;\n    },\n  },\n  {\n    Header: 'Last Name',\n    accessor: 'lastName',\n    cellStyle: {\n      width: 'unset',\n      flex: 2,\n      textAlign: 'left',\n    },\n    // disable the sorting on this column\n    disableSortBy: true,\n  },\n  {\n    Header: 'Age',\n    accessor: 'age',\n    cellStyle: {\n      width: 'unset',\n      flex: 1,\n      textAlign: 'left',\n    },\n  },\n  {\n    Header: 'Health',\n    accessor: 'health',\n    sortType: 'health',\n    cellStyle: {\n      width: 'unset',\n      flex: 1,\n      textAlign: 'left',\n    },\n  },\n];\nconst getRowId = (row: Entry, relativeIndex: number) => {\n  return row.lastName + ' ' + row.firstName;\n};\nexport const SimpleContentTable = {\n  render: ({}) => {\n    const TableWithQueryParams = ({}) => {\n      const location = useLocation();\n      return (\n        <>\n          <span\n            style={{\n              color: 'white',\n            }}\n          >\n            {location.search}\n          </span>\n          <Table\n            columns={columns}\n            data={data}\n            defaultSortingKey={'health'}\n            entityName={{\n              en: {\n                singular: 'user',\n                plural: 'users',\n              },\n            }}\n          >\n            <div\n              style={{\n                margin: '16px 0',\n              }}\n            >\n              <Table.SearchWithQueryParams />\n            </div>\n            <Table.SingleSelectableContent\n              rowHeight=\"h40\"\n              separationLineVariant=\"backgroundLevel3\"\n            ></Table.SingleSelectableContent>\n          </Table>\n        </>\n      );\n    };\n\n    return (\n      <>\n        <Title>Non Selectable Table</Title>\n        <div\n          style={{\n            height: '300px',\n            paddingTop: '20px',\n          }}\n        >\n          <Table columns={columns} data={data} defaultSortingKey={'health'}>\n            <Table.SingleSelectableContent\n              rowHeight=\"h32\"\n              separationLineVariant=\"backgroundLevel3\"\n            />\n          </Table>\n        </div>\n        <Title>Single Selectable Table</Title>\n        <div\n          style={{\n            height: '300px',\n            paddingTop: '20px',\n          }}\n        >\n          <Table\n            columns={columns}\n            data={data}\n            defaultSortingKey={'health'}\n            getRowId={getRowId}\n          >\n            <Table.SingleSelectableContent\n              rowHeight=\"h40\"\n              separationLineVariant=\"backgroundLevel3\"\n              selectedId={'Rodolph Yohann'}\n              onRowSelected={action('Table Row Clicked')}\n            />\n          </Table>\n        </div>\n        <Title>Table with Search</Title>\n        <div\n          style={{\n            height: '300px',\n            paddingTop: '20px',\n          }}\n        >\n          <Router>\n            <TableWithQueryParams />\n          </Router>\n        </div>\n        <Title>Empty table</Title>\n        <div\n          style={{\n            height: '300px',\n            paddingTop: '20px',\n          }}\n        >\n          <Table\n            columns={columns}\n            data={[]}\n            defaultSortingKey={'health'}\n            getRowId={getRowId}\n          >\n            <Table.SingleSelectableContent\n              rowHeight=\"h40\"\n              separationLineVariant=\"backgroundLevel3\"\n              onRowSelected={action('Table Row Clicked')}\n            />\n          </Table>\n        </div>\n        <Title>MultiSelect</Title>\n        <div\n          style={{\n            height: '300px',\n            paddingTop: '20px',\n          }}\n        >\n          <Table\n            columns={columns}\n            data={data}\n            defaultSortingKey={'health'}\n            getRowId={getRowId}\n            status=\"loading\"\n          >\n            <Table.MultiSelectableContent\n              rowHeight=\"h40\"\n              separationLineVariant=\"backgroundLevel3\"\n              onMultiSelectionChanged={(rows) => {\n                console.log('Table.MultiSelectableContent selected row', rows);\n              }}\n            />\n          </Table>\n        </div>\n      </>\n    );\n  },\n};\n\nexport const asyncTable = {\n  render: ({}) => {\n    function DataComponent({\n      data,\n      loading,\n      row,\n    }: {\n      row: Row<Entry>;\n      loading: boolean;\n      data: string;\n    }) {\n      return loading ? (\n        <span>loading ...</span>\n      ) : (\n        <span> {`${row.values.firstName} ${data}`} </span>\n      );\n    }\n\n    function RowAsync({ row }: { row: Row<Entry> }) {\n      const [loading, setLoading] = React.useState(true);\n      const [data, setData] = React.useState('');\n      React.useEffect(() => {\n        const timer = setTimeout(() => {\n          setData('loaded async');\n          setLoading(false);\n        }, 1000);\n        return () => {\n          clearTimeout(timer);\n        };\n      }, []);\n      return <DataComponent row={row} loading={loading} data={data} />;\n    }\n\n    const renderRowSubComponent = React.useCallback(\n      ({ row, ...rest }: CellProps<Entry>) => {\n        return <RowAsync row={row} />;\n      },\n      [],\n    );\n    const columnAsync: Column<Entry>[] = [\n      {\n        Header: 'First Name',\n        accessor: 'firstName',\n        cellStyle: {\n          textAlign: 'left',\n          width: 'unset',\n          flex: 1,\n        },\n        Cell: renderRowSubComponent,\n      },\n      {\n        Header: 'Last Name',\n        accessor: 'lastName',\n        cellStyle: {\n          textAlign: 'left',\n          width: 'unset',\n          flex: 1,\n        },\n      },\n      {\n        Header: 'Age',\n        accessor: 'age',\n        cellStyle: {\n          textAlign: 'left',\n          width: 'unset',\n          flex: 0.5,\n        },\n      },\n      {\n        Header: 'Health',\n        accessor: 'health',\n        sortType: 'health',\n        cellStyle: {\n          textAlign: 'left',\n          width: 'unset',\n          flex: 1,\n        },\n      },\n    ];\n\n    return (\n      <>\n        <Title>async cell Table</Title>\n        <div\n          style={{\n            height: '300px',\n            paddingTop: '20px',\n          }}\n        >\n          <BrowserRouter>\n            <Table\n              columns={columnAsync}\n              data={data}\n              defaultSortingKey={'health'}\n            >\n              <Table.SearchWithQueryParams></Table.SearchWithQueryParams>\n              <Table.SingleSelectableContent\n                rowHeight=\"h40\"\n                separationLineVariant=\"backgroundLevel3\"\n                selectedId={'Rodolph Yohann'}\n                onRowSelected={action('Table Row Clicked')}\n              />\n            </Table>\n          </BrowserRouter>\n        </div>\n      </>\n    );\n  },\n};\nexport const OnBottomCallback = {\n  render: ({}) => {\n    const columns: Column<{ index: number; value: number }>[] = [\n      {\n        Header: 'value',\n        accessor: 'value',\n        cellStyle: {\n          textAlign: 'left',\n        },\n      },\n    ];\n\n    const createData = (indexStart = 0) => {\n      const data: { index: number; value: number }[] = [];\n\n      for (let i = 0; i < 100; i++) {\n        data.push({\n          index: indexStart + i,\n          value: Math.floor(Math.random() * 1000),\n        });\n      }\n\n      return data;\n    };\n\n    const [randomData, setRandomData] = useState(createData());\n\n    const onBottom = () => {\n      action('onBottom');\n      setRandomData([...randomData, ...createData(randomData.length)]);\n    };\n\n    return (\n      <>\n        <Title>async cell Table</Title>\n        <div\n          style={{\n            height: '300px',\n            paddingTop: '20px',\n          }}\n        >\n          <Table\n            columns={columns}\n            data={randomData}\n            onBottom={onBottom}\n            onBottomOffset={5}\n            defaultSortingKey={'value'}\n          >\n            <Table.SingleSelectableContent\n              rowHeight=\"h40\"\n              separationLineVariant=\"backgroundLevel3\"\n            />\n          </Table>\n        </div>\n      </>\n    );\n  },\n};\n\nexport const MultiTable = {\n  render: ({}) => {\n    const [data1, setData1] = useState([\n      {\n        name: 'test',\n        volume: 1,\n        capacity: '1Gi',\n      },\n      {\n        name: 'test',\n        volume: 1,\n        capacity: '1Gi',\n      },\n      {\n        name: 'test',\n        volume: 1,\n        capacity: '1Gi',\n      },\n    ]);\n\n    const [data2, setData2] = useState([\n      {\n        name: 'test',\n        volume: 1,\n        capacity: '1Gi',\n      },\n      {\n        name: 'test',\n        volume: 1,\n        capacity: '1Gi',\n      },\n      {\n        name: 'test',\n        volume: 1,\n        capacity: '1Gi',\n      },\n    ]);\n    const columns2: Column<(typeof data2)[number]>[] = [\n      {\n        Header: 'Name',\n        accessor: 'name',\n      },\n      {\n        Header: 'Volume',\n        accessor: 'volume',\n      },\n      {\n        Header: 'Capacity',\n        accessor: 'capacity',\n      },\n    ];\n\n    const demo = () => {\n      setData1([\n        {\n          name: 'test',\n          volume: 1,\n          capacity: '1Gi',\n        },\n        {\n          name: 'test',\n          volume: 1,\n          capacity: '1Gi',\n        },\n      ]);\n\n      setData2([\n        {\n          name: 'test',\n          volume: 1,\n          capacity: '2Gi',\n        },\n        {\n          name: 'test',\n          volume: 1,\n          capacity: '1Gi',\n        },\n      ]);\n    };\n\n    return (\n      <>\n        <Title>Several Multiselect</Title>\n        <Flex justifyContent=\"center\" gap=\"2rem\">\n          <Box width=\"500px\" height=\"200px\">\n            <Table\n              columns={columns2}\n              data={data1}\n              defaultSortingKey=\"name\"\n              initiallySelectedRowsIds={new Set([0, 2])}\n            >\n              <Table.MultiSelectableContent\n                onMultiSelectionChanged={(rows) => {\n                  console.log(\n                    'Table.MultiSelectableContent selected row',\n                    rows,\n                  );\n                }}\n              />\n            </Table>\n          </Box>\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"center\"\n            gap=\"1rem\"\n          >\n            <Button\n              variant=\"secondary\"\n              label=\">\"\n              onClick={() => {\n                demo();\n              }}\n            />\n            <Button\n              variant=\"secondary\"\n              label=\"<\"\n              onClick={() => {\n                demo();\n              }}\n            />\n          </Box>\n          <Box width=\"500px\" height=\"200px\">\n            <Table columns={columns2} data={data2} defaultSortingKey={'health'}>\n              <Table.MultiSelectableContent\n                onMultiSelectionChanged={(rows) => {\n                  console.log(\n                    'Table.MultiSelectableContent selected row',\n                    rows,\n                  );\n                }}\n              />\n            </Table>\n          </Box>\n        </Flex>\n      </>\n    );\n  },\n};\n\nexport const EmptyTable = {\n  render: (args) => {\n    const { background } = args;\n    return (\n      <Box width=\"500px\" height=\"200px\">\n        <Table columns={columns} data={[]} defaultSortingKey={'firstName'}>\n          <Table.SingleSelectableContent\n            rowHeight=\"h40\"\n            separationLineVariant={background}\n            onRowSelected={action('Table Row Clicked')}\n          />\n        </Table>\n      </Box>\n    );\n  },\n  argTypes: {\n    background: {\n      control: {\n        type: 'select',\n        description: 'Background color',\n        defaultValue: 'backgroundLevel3',\n      },\n      options: [\n        'backgroundLevel1',\n        'backgroundLevel2',\n        'backgroundLevel3',\n        'backgroundLevel4',\n      ],\n    },\n  },\n};\n\nexport const LoadingTable = {\n  render: ({}) => {\n    return (\n      <Box width=\"500px\" height=\"200px\">\n        <Table\n          columns={columns}\n          data={data}\n          defaultSortingKey={'health'}\n          getRowId={getRowId}\n          status=\"loading\"\n        >\n          <Table.SingleSelectableContent\n            rowHeight=\"h40\"\n            separationLineVariant=\"backgroundLevel3\"\n          />\n        </Table>\n      </Box>\n    );\n  },\n};\n\nexport const ErrorTable = {\n  render: ({}) => {\n    return (\n      <Box width=\"50rem\" height=\"200px\">\n        <Table\n          columns={columns}\n          data={data}\n          defaultSortingKey={'health'}\n          getRowId={getRowId}\n          status=\"error\"\n          entityName={{\n            en: { singular: 'user', plural: 'users' },\n            fr: { singular: 'utilisateur', plural: 'utilisateurs' },\n          }}\n        >\n          <Table.SingleSelectableContent\n            rowHeight=\"h40\"\n            separationLineVariant=\"backgroundLevel4\"\n            locale=\"en\"\n          />\n        </Table>\n      </Box>\n    );\n  },\n};\n",locationsMap:{"simple-content-table":{startLoc:{col:34,line:116},endLoc:{col:1,line:250},startBody:{col:34,line:116},endBody:{col:1,line:250}},"async-table":{startLoc:{col:26,line:252},endLoc:{col:1,line:360},startBody:{col:26,line:252},endBody:{col:1,line:360}},"on-bottom-callback":{startLoc:{col:32,line:361},endLoc:{col:1,line:418},startBody:{col:32,line:361},endBody:{col:1,line:418}},"multi-table":{startLoc:{col:26,line:420},endLoc:{col:1,line:558},startBody:{col:26,line:420},endBody:{col:1,line:558}},"empty-table":{startLoc:{col:26,line:560},endLoc:{col:1,line:590},startBody:{col:26,line:560},endBody:{col:1,line:590}},"loading-table":{startLoc:{col:28,line:592},endLoc:{col:1,line:611},startBody:{col:28,line:592},endBody:{col:1,line:611}},"error-table":{startLoc:{col:26,line:613},endLoc:{col:1,line:637},startBody:{col:26,line:613},endBody:{col:1,line:637}}}}},title:"Components/Data Display/Table",component:_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI};var data=[{id:1,firstName:"Sotiria-long-long-long-long-long",lastName:"Agathangelou",age:void 0,health:"healthy"},{id:2,firstName:"Stefania",lastName:"Evgenios",age:27,health:"warning"},{id:3,firstName:"Yohann",lastName:"Rodolph",age:27,health:"critical"},{id:4,firstName:"Ninette",lastName:"Caroline",age:31,health:"healthy"}],columns=[{Header:"First Name",accessor:"firstName",cellStyle:{width:"unset",flex:2,textAlign:"left"},Cell:_ref=>{var{value}=_ref;return value?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:value}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.KD,{})}},{Header:"Last Name",accessor:"lastName",cellStyle:{width:"unset",flex:2,textAlign:"left"},disableSortBy:!0},{Header:"Age",accessor:"age",cellStyle:{width:"unset",flex:1,textAlign:"left"}},{Header:"Health",accessor:"health",sortType:"health",cellStyle:{width:"unset",flex:1,textAlign:"left"}}],getRowId=(row,relativeIndex)=>row.lastName+" "+row.firstName,SimpleContentTable={render:_ref2=>{var{}=_ref2,TableWithQueryParams=_ref3=>{var{}=_ref3,location=(0,react_router_dom__WEBPACK_IMPORTED_MODULE_6__.zy)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("span",{style:{color:"white"},children:location.search}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI,{columns,data,defaultSortingKey:"health",entityName:{en:{singular:"user",plural:"users"}},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:{margin:"16px 0"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI.SearchWithQueryParams,{})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI.SingleSelectableContent,{rowHeight:"h40",separationLineVariant:"backgroundLevel3"})]})]})};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_common__WEBPACK_IMPORTED_MODULE_7__.hE,{children:"Non Selectable Table"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:{height:"300px",paddingTop:"20px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI,{columns,data,defaultSortingKey:"health",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI.SingleSelectableContent,{rowHeight:"h32",separationLineVariant:"backgroundLevel3"})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_common__WEBPACK_IMPORTED_MODULE_7__.hE,{children:"Single Selectable Table"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:{height:"300px",paddingTop:"20px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI,{columns,data,defaultSortingKey:"health",getRowId,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI.SingleSelectableContent,{rowHeight:"h40",separationLineVariant:"backgroundLevel3",selectedId:"Rodolph Yohann",onRowSelected:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("Table Row Clicked")})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_common__WEBPACK_IMPORTED_MODULE_7__.hE,{children:"Table with Search"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:{height:"300px",paddingTop:"20px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_8__.Kd,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(TableWithQueryParams,{})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_common__WEBPACK_IMPORTED_MODULE_7__.hE,{children:"Empty table"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:{height:"300px",paddingTop:"20px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI,{columns,data:[],defaultSortingKey:"health",getRowId,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI.SingleSelectableContent,{rowHeight:"h40",separationLineVariant:"backgroundLevel3",onRowSelected:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("Table Row Clicked")})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_common__WEBPACK_IMPORTED_MODULE_7__.hE,{children:"MultiSelect"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:{height:"300px",paddingTop:"20px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI,{columns,data,defaultSortingKey:"health",getRowId,status:"loading",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI.MultiSelectableContent,{rowHeight:"h40",separationLineVariant:"backgroundLevel3",onMultiSelectionChanged:rows=>{console.log("Table.MultiSelectableContent selected row",rows)}})})})]})}},asyncTable={render:_ref4=>{var{}=_ref4;function DataComponent(_ref5){var{data,loading,row}=_ref5;return loading?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("span",{children:"loading ..."}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("span",{children:[" ","".concat(row.values.firstName," ").concat(data)," "]})}function RowAsync(_ref6){var{row}=_ref6,[loading,setLoading]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!0),[data,setData]=react__WEBPACK_IMPORTED_MODULE_0__.useState("");return react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{var timer=setTimeout((()=>{setData("loaded async"),setLoading(!1)}),1e3);return()=>{clearTimeout(timer)}}),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(DataComponent,{row,loading,data})}var columnAsync=[{Header:"First Name",accessor:"firstName",cellStyle:{textAlign:"left",width:"unset",flex:1},Cell:react__WEBPACK_IMPORTED_MODULE_0__.useCallback((_ref7=>{var{row}=_ref7;_objectWithoutProperties(_ref7,_excluded);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(RowAsync,{row})}),[])},{Header:"Last Name",accessor:"lastName",cellStyle:{textAlign:"left",width:"unset",flex:1}},{Header:"Age",accessor:"age",cellStyle:{textAlign:"left",width:"unset",flex:.5}},{Header:"Health",accessor:"health",sortType:"health",cellStyle:{textAlign:"left",width:"unset",flex:1}}];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_common__WEBPACK_IMPORTED_MODULE_7__.hE,{children:"async cell Table"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:{height:"300px",paddingTop:"20px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_8__.Kd,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI,{columns:columnAsync,data,defaultSortingKey:"health",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI.SearchWithQueryParams,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI.SingleSelectableContent,{rowHeight:"h40",separationLineVariant:"backgroundLevel3",selectedId:"Rodolph Yohann",onRowSelected:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("Table Row Clicked")})]})})})]})}},OnBottomCallback={render:_ref8=>{var{}=_ref8,createData=function createData(){for(var indexStart=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,data=[],i=0;i<100;i++)data.push({index:indexStart+i,value:Math.floor(1e3*Math.random())});return data},[randomData,setRandomData]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(createData());return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_common__WEBPACK_IMPORTED_MODULE_7__.hE,{children:"async cell Table"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:{height:"300px",paddingTop:"20px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI,{columns:[{Header:"value",accessor:"value",cellStyle:{textAlign:"left"}}],data:randomData,onBottom:()=>{(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("onBottom"),setRandomData([...randomData,...createData(randomData.length)])},onBottomOffset:5,defaultSortingKey:"value",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI.SingleSelectableContent,{rowHeight:"h40",separationLineVariant:"backgroundLevel3"})})})]})}},MultiTable={render:_ref9=>{var{}=_ref9,[data1,setData1]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([{name:"test",volume:1,capacity:"1Gi"},{name:"test",volume:1,capacity:"1Gi"},{name:"test",volume:1,capacity:"1Gi"}]),[data2,setData2]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([{name:"test",volume:1,capacity:"1Gi"},{name:"test",volume:1,capacity:"1Gi"},{name:"test",volume:1,capacity:"1Gi"}]),columns2=[{Header:"Name",accessor:"name"},{Header:"Volume",accessor:"volume"},{Header:"Capacity",accessor:"capacity"}],demo=()=>{setData1([{name:"test",volume:1,capacity:"1Gi"},{name:"test",volume:1,capacity:"1Gi"}]),setData2([{name:"test",volume:1,capacity:"2Gi"},{name:"test",volume:1,capacity:"1Gi"}])};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_common__WEBPACK_IMPORTED_MODULE_7__.hE,{children:"Several Multiselect"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(Flex,{justifyContent:"center",gap:"2rem",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_next__WEBPACK_IMPORTED_MODULE_4__.a,{width:"500px",height:"200px",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI,{columns:columns2,data:data1,defaultSortingKey:"name",initiallySelectedRowsIds:new Set([0,2]),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI.MultiSelectableContent,{onMultiSelectionChanged:rows=>{console.log("Table.MultiSelectableContent selected row",rows)}})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_src_lib_next__WEBPACK_IMPORTED_MODULE_4__.a,{display:"flex",flexDirection:"column",justifyContent:"center",gap:"1rem",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_next__WEBPACK_IMPORTED_MODULE_9__.$n,{variant:"secondary",label:">",onClick:()=>{demo()}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_next__WEBPACK_IMPORTED_MODULE_9__.$n,{variant:"secondary",label:"<",onClick:()=>{demo()}})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_next__WEBPACK_IMPORTED_MODULE_4__.a,{width:"500px",height:"200px",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI,{columns:columns2,data:data2,defaultSortingKey:"health",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI.MultiSelectableContent,{onMultiSelectionChanged:rows=>{console.log("Table.MultiSelectableContent selected row",rows)}})})})]})]})}},EmptyTable={render:args=>{var{background}=args;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_next__WEBPACK_IMPORTED_MODULE_4__.a,{width:"500px",height:"200px",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI,{columns,data:[],defaultSortingKey:"firstName",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI.SingleSelectableContent,{rowHeight:"h40",separationLineVariant:background,onRowSelected:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("Table Row Clicked")})})})},argTypes:{background:{control:{type:"select",description:"Background color",defaultValue:"backgroundLevel3"},options:["backgroundLevel1","backgroundLevel2","backgroundLevel3","backgroundLevel4"]}}},LoadingTable={render:_ref10=>{var{}=_ref10;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_next__WEBPACK_IMPORTED_MODULE_4__.a,{width:"500px",height:"200px",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI,{columns,data,defaultSortingKey:"health",getRowId,status:"loading",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI.SingleSelectableContent,{rowHeight:"h40",separationLineVariant:"backgroundLevel3"})})})}},ErrorTable={render:_ref11=>{var{}=_ref11;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_next__WEBPACK_IMPORTED_MODULE_4__.a,{width:"50rem",height:"200px",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI,{columns,data,defaultSortingKey:"health",getRowId,status:"error",entityName:{en:{singular:"user",plural:"users"},fr:{singular:"utilisateur",plural:"utilisateurs"}},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_src_lib_components_tablev2_Tablev2_component__WEBPACK_IMPORTED_MODULE_5__.XI.SingleSelectableContent,{rowHeight:"h40",separationLineVariant:"backgroundLevel4",locale:"en"})})})}};SimpleContentTable.parameters={...SimpleContentTable.parameters,docs:{...SimpleContentTable.parameters?.docs,source:{originalSource:"{\n  render: ({}) => {\n    const TableWithQueryParams = ({}) => {\n      const location = useLocation();\n      return <>\n          <span style={{\n          color: 'white'\n        }}>\n            {location.search}\n          </span>\n          <Table columns={columns} data={data} defaultSortingKey={'health'} entityName={{\n          en: {\n            singular: 'user',\n            plural: 'users'\n          }\n        }}>\n            <div style={{\n            margin: '16px 0'\n          }}>\n              <Table.SearchWithQueryParams />\n            </div>\n            <Table.SingleSelectableContent rowHeight=\"h40\" separationLineVariant=\"backgroundLevel3\"></Table.SingleSelectableContent>\n          </Table>\n        </>;\n    };\n    return <>\n        <Title>Non Selectable Table</Title>\n        <div style={{\n        height: '300px',\n        paddingTop: '20px'\n      }}>\n          <Table columns={columns} data={data} defaultSortingKey={'health'}>\n            <Table.SingleSelectableContent rowHeight=\"h32\" separationLineVariant=\"backgroundLevel3\" />\n          </Table>\n        </div>\n        <Title>Single Selectable Table</Title>\n        <div style={{\n        height: '300px',\n        paddingTop: '20px'\n      }}>\n          <Table columns={columns} data={data} defaultSortingKey={'health'} getRowId={getRowId}>\n            <Table.SingleSelectableContent rowHeight=\"h40\" separationLineVariant=\"backgroundLevel3\" selectedId={'Rodolph Yohann'} onRowSelected={action('Table Row Clicked')} />\n          </Table>\n        </div>\n        <Title>Table with Search</Title>\n        <div style={{\n        height: '300px',\n        paddingTop: '20px'\n      }}>\n          <Router>\n            <TableWithQueryParams />\n          </Router>\n        </div>\n        <Title>Empty table</Title>\n        <div style={{\n        height: '300px',\n        paddingTop: '20px'\n      }}>\n          <Table columns={columns} data={[]} defaultSortingKey={'health'} getRowId={getRowId}>\n            <Table.SingleSelectableContent rowHeight=\"h40\" separationLineVariant=\"backgroundLevel3\" onRowSelected={action('Table Row Clicked')} />\n          </Table>\n        </div>\n        <Title>MultiSelect</Title>\n        <div style={{\n        height: '300px',\n        paddingTop: '20px'\n      }}>\n          <Table columns={columns} data={data} defaultSortingKey={'health'} getRowId={getRowId} status=\"loading\">\n            <Table.MultiSelectableContent rowHeight=\"h40\" separationLineVariant=\"backgroundLevel3\" onMultiSelectionChanged={rows => {\n            console.log('Table.MultiSelectableContent selected row', rows);\n          }} />\n          </Table>\n        </div>\n      </>;\n  }\n}",...SimpleContentTable.parameters?.docs?.source}}},asyncTable.parameters={...asyncTable.parameters,docs:{...asyncTable.parameters?.docs,source:{originalSource:"{\n  render: ({}) => {\n    function DataComponent({\n      data,\n      loading,\n      row\n    }: {\n      row: Row<Entry>;\n      loading: boolean;\n      data: string;\n    }) {\n      return loading ? <span>loading ...</span> : <span> {`${row.values.firstName} ${data}`} </span>;\n    }\n    function RowAsync({\n      row\n    }: {\n      row: Row<Entry>;\n    }) {\n      const [loading, setLoading] = React.useState(true);\n      const [data, setData] = React.useState('');\n      React.useEffect(() => {\n        const timer = setTimeout(() => {\n          setData('loaded async');\n          setLoading(false);\n        }, 1000);\n        return () => {\n          clearTimeout(timer);\n        };\n      }, []);\n      return <DataComponent row={row} loading={loading} data={data} />;\n    }\n    const renderRowSubComponent = React.useCallback(({\n      row,\n      ...rest\n    }: CellProps<Entry>) => {\n      return <RowAsync row={row} />;\n    }, []);\n    const columnAsync: Column<Entry>[] = [{\n      Header: 'First Name',\n      accessor: 'firstName',\n      cellStyle: {\n        textAlign: 'left',\n        width: 'unset',\n        flex: 1\n      },\n      Cell: renderRowSubComponent\n    }, {\n      Header: 'Last Name',\n      accessor: 'lastName',\n      cellStyle: {\n        textAlign: 'left',\n        width: 'unset',\n        flex: 1\n      }\n    }, {\n      Header: 'Age',\n      accessor: 'age',\n      cellStyle: {\n        textAlign: 'left',\n        width: 'unset',\n        flex: 0.5\n      }\n    }, {\n      Header: 'Health',\n      accessor: 'health',\n      sortType: 'health',\n      cellStyle: {\n        textAlign: 'left',\n        width: 'unset',\n        flex: 1\n      }\n    }];\n    return <>\n        <Title>async cell Table</Title>\n        <div style={{\n        height: '300px',\n        paddingTop: '20px'\n      }}>\n          <BrowserRouter>\n            <Table columns={columnAsync} data={data} defaultSortingKey={'health'}>\n              <Table.SearchWithQueryParams></Table.SearchWithQueryParams>\n              <Table.SingleSelectableContent rowHeight=\"h40\" separationLineVariant=\"backgroundLevel3\" selectedId={'Rodolph Yohann'} onRowSelected={action('Table Row Clicked')} />\n            </Table>\n          </BrowserRouter>\n        </div>\n      </>;\n  }\n}",...asyncTable.parameters?.docs?.source}}},OnBottomCallback.parameters={...OnBottomCallback.parameters,docs:{...OnBottomCallback.parameters?.docs,source:{originalSource:"{\n  render: ({}) => {\n    const columns: Column<{\n      index: number;\n      value: number;\n    }>[] = [{\n      Header: 'value',\n      accessor: 'value',\n      cellStyle: {\n        textAlign: 'left'\n      }\n    }];\n    const createData = (indexStart = 0) => {\n      const data: {\n        index: number;\n        value: number;\n      }[] = [];\n      for (let i = 0; i < 100; i++) {\n        data.push({\n          index: indexStart + i,\n          value: Math.floor(Math.random() * 1000)\n        });\n      }\n      return data;\n    };\n    const [randomData, setRandomData] = useState(createData());\n    const onBottom = () => {\n      action('onBottom');\n      setRandomData([...randomData, ...createData(randomData.length)]);\n    };\n    return <>\n        <Title>async cell Table</Title>\n        <div style={{\n        height: '300px',\n        paddingTop: '20px'\n      }}>\n          <Table columns={columns} data={randomData} onBottom={onBottom} onBottomOffset={5} defaultSortingKey={'value'}>\n            <Table.SingleSelectableContent rowHeight=\"h40\" separationLineVariant=\"backgroundLevel3\" />\n          </Table>\n        </div>\n      </>;\n  }\n}",...OnBottomCallback.parameters?.docs?.source}}},MultiTable.parameters={...MultiTable.parameters,docs:{...MultiTable.parameters?.docs,source:{originalSource:"{\n  render: ({}) => {\n    const [data1, setData1] = useState([{\n      name: 'test',\n      volume: 1,\n      capacity: '1Gi'\n    }, {\n      name: 'test',\n      volume: 1,\n      capacity: '1Gi'\n    }, {\n      name: 'test',\n      volume: 1,\n      capacity: '1Gi'\n    }]);\n    const [data2, setData2] = useState([{\n      name: 'test',\n      volume: 1,\n      capacity: '1Gi'\n    }, {\n      name: 'test',\n      volume: 1,\n      capacity: '1Gi'\n    }, {\n      name: 'test',\n      volume: 1,\n      capacity: '1Gi'\n    }]);\n    const columns2: Column<(typeof data2)[number]>[] = [{\n      Header: 'Name',\n      accessor: 'name'\n    }, {\n      Header: 'Volume',\n      accessor: 'volume'\n    }, {\n      Header: 'Capacity',\n      accessor: 'capacity'\n    }];\n    const demo = () => {\n      setData1([{\n        name: 'test',\n        volume: 1,\n        capacity: '1Gi'\n      }, {\n        name: 'test',\n        volume: 1,\n        capacity: '1Gi'\n      }]);\n      setData2([{\n        name: 'test',\n        volume: 1,\n        capacity: '2Gi'\n      }, {\n        name: 'test',\n        volume: 1,\n        capacity: '1Gi'\n      }]);\n    };\n    return <>\n        <Title>Several Multiselect</Title>\n        <Flex justifyContent=\"center\" gap=\"2rem\">\n          <Box width=\"500px\" height=\"200px\">\n            <Table columns={columns2} data={data1} defaultSortingKey=\"name\" initiallySelectedRowsIds={new Set([0, 2])}>\n              <Table.MultiSelectableContent onMultiSelectionChanged={rows => {\n              console.log('Table.MultiSelectableContent selected row', rows);\n            }} />\n            </Table>\n          </Box>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" gap=\"1rem\">\n            <Button variant=\"secondary\" label=\">\" onClick={() => {\n            demo();\n          }} />\n            <Button variant=\"secondary\" label=\"<\" onClick={() => {\n            demo();\n          }} />\n          </Box>\n          <Box width=\"500px\" height=\"200px\">\n            <Table columns={columns2} data={data2} defaultSortingKey={'health'}>\n              <Table.MultiSelectableContent onMultiSelectionChanged={rows => {\n              console.log('Table.MultiSelectableContent selected row', rows);\n            }} />\n            </Table>\n          </Box>\n        </Flex>\n      </>;\n  }\n}",...MultiTable.parameters?.docs?.source}}},EmptyTable.parameters={...EmptyTable.parameters,docs:{...EmptyTable.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    const {\n      background\n    } = args;\n    return <Box width=\"500px\" height=\"200px\">\n        <Table columns={columns} data={[]} defaultSortingKey={'firstName'}>\n          <Table.SingleSelectableContent rowHeight=\"h40\" separationLineVariant={background} onRowSelected={action('Table Row Clicked')} />\n        </Table>\n      </Box>;\n  },\n  argTypes: {\n    background: {\n      control: {\n        type: 'select',\n        description: 'Background color',\n        defaultValue: 'backgroundLevel3'\n      },\n      options: ['backgroundLevel1', 'backgroundLevel2', 'backgroundLevel3', 'backgroundLevel4']\n    }\n  }\n}",...EmptyTable.parameters?.docs?.source}}},LoadingTable.parameters={...LoadingTable.parameters,docs:{...LoadingTable.parameters?.docs,source:{originalSource:'{\n  render: ({}) => {\n    return <Box width="500px" height="200px">\n        <Table columns={columns} data={data} defaultSortingKey={\'health\'} getRowId={getRowId} status="loading">\n          <Table.SingleSelectableContent rowHeight="h40" separationLineVariant="backgroundLevel3" />\n        </Table>\n      </Box>;\n  }\n}',...LoadingTable.parameters?.docs?.source}}},ErrorTable.parameters={...ErrorTable.parameters,docs:{...ErrorTable.parameters?.docs,source:{originalSource:'{\n  render: ({}) => {\n    return <Box width="50rem" height="200px">\n        <Table columns={columns} data={data} defaultSortingKey={\'health\'} getRowId={getRowId} status="error" entityName={{\n        en: {\n          singular: \'user\',\n          plural: \'users\'\n        },\n        fr: {\n          singular: \'utilisateur\',\n          plural: \'utilisateurs\'\n        }\n      }}>\n          <Table.SingleSelectableContent rowHeight="h40" separationLineVariant="backgroundLevel4" locale="en" />\n        </Table>\n      </Box>;\n  }\n}',...ErrorTable.parameters?.docs?.source}}};const __namedExportsOrder=["SimpleContentTable","asyncTable","OnBottomCallback","MultiTable","EmptyTable","LoadingTable","ErrorTable"]}}]);